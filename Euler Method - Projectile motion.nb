(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    214021,       4232]
NotebookOptionsPosition[    212051,       4185]
NotebookOutlinePosition[    212451,       4201]
CellTagsIndexPosition[    212408,       4198]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Projectile motion in air with and without correction to the air density.\
\>", "Section",
 CellChangeTimes->{{3.683299533302937*^9, 3.6832995359738894`*^9}, {
  3.8450898988320427`*^9, 3.8450899112557063`*^9}, {3.851845276723566*^9, 
  3.8518453109940653`*^9}},ExpressionUUID->"88dc55d9-d2d5-49ea-a9cc-\
5040bf43d2be"],

Cell[CellGroupData[{

Cell["With Density Correction", "Subsection",
 CellChangeTimes->{{3.845091009004834*^9, 
  3.845091014532296*^9}},ExpressionUUID->"b9c7f11c-1ea9-4739-9bdb-\
b615408fa3e9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Initial", " ", "Values"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"dt", "=", "0.1"}], ";", 
    RowBox[{"ts", "=", "0."}], ";", 
    RowBox[{"tf", "=", "100."}], ";", 
    RowBox[{"v0", "=", "700."}], ";", 
    RowBox[{"BoverM", "=", 
     RowBox[{"4.", "*", 
      SuperscriptBox["10", 
       RowBox[{"-", "5"}]]}]}], ";", 
    RowBox[{"g", "=", "9.8"}], ";", 
    RowBox[{"y0", "=", 
     RowBox[{"1.", "*", 
      SuperscriptBox["10", "4"]}]}], ";"}], "\n", 
   RowBox[{"(*", 
    RowBox[{"For", " ", "example"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Theta]", "=", 
     RowBox[{
      FractionBox["Pi", "180."], "*", 
      RowBox[{"{", 
       RowBox[{"35.", ",", "45."}], "}"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "Number", " ", "of", " ", "theta", " ", "elements", " ", "and", " ", 
      "arrangments"}], ";", " ", 
     RowBox[{
      RowBox[{
      "Each", " ", "one", " ", "will", " ", "contain", " ", "lists", " ", 
       "as", " ", "elements", " ", "and", " ", "the", " ", "number", " ", 
       "of", " ", "those", " ", "inner", " ", "lists"}], " ", "=", " ", 
      RowBox[{"Length", "[", "\[Theta]", "]"}]}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tL", "=", 
     RowBox[{"Range", "[", 
      RowBox[{"ts", ",", "tf", ",", "dt"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Vtxall", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"i", "==", "1"}], ",", 
           RowBox[{"v0", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]", "[", 
              RowBox[{"[", "j", "]"}], "]"}], "]"}]}], ",", "0"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", "tL", "]"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", 
         RowBox[{"Length", "[", "\[Theta]", "]"}]}], "}"}]}], "]"}]}], ";", 
    " ", 
    RowBox[{"(*", "Initializing", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"Vtyall", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"i", "==", "1"}], ",", 
           RowBox[{"v0", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]", "[", 
              RowBox[{"[", "j", "]"}], "]"}], "]"}]}], ",", "0"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", "tL", "]"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", 
         RowBox[{"Length", "[", "\[Theta]", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"xtall", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", "tL", "]"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", 
         RowBox[{"Length", "[", "\[Theta]", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ytall", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", "tL", "]"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", 
         RowBox[{"Length", "[", "\[Theta]", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", "Calculations", "*)"}], "\n", 
   RowBox[{
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"j", "=", "1"}], ",", 
      RowBox[{"j", "<=", " ", 
       RowBox[{"Length", "[", "\[Theta]", "]"}]}], ",", 
      RowBox[{"j", "++"}], ",", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "<", 
         RowBox[{"Length", "[", "tL", "]"}]}], ",", 
        RowBox[{"i", "++"}], ",", 
        RowBox[{
         RowBox[{"vi", "=", 
          SqrtBox[
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Vtxall", "[", 
                RowBox[{"[", "j", "]"}], "]"}], "[", 
               RowBox[{"[", "i", "]"}], "]"}], ")"}], "2"], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Vtyall", "[", 
                RowBox[{"[", "j", "]"}], "]"}], "[", 
               RowBox[{"[", "i", "]"}], "]"}], ")"}], "2"]}]]}], ";", 
         RowBox[{
          RowBox[{
           RowBox[{"Vtxall", "[", 
            RowBox[{"[", "j", "]"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"i", "+", "1"}], "]"}], "]"}], "=", 
          RowBox[{
           RowBox[{
            RowBox[{"Vtxall", "[", 
             RowBox[{"[", "j", "]"}], "]"}], "[", 
            RowBox[{"[", "i", "]"}], "]"}], "-", 
           RowBox[{
            RowBox[{"(", 
             StyleBox[
              SuperscriptBox["E", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{
                  RowBox[{"ytall", "[", 
                   RowBox[{"[", "j", "]"}], "]"}], "[", 
                  RowBox[{"[", "i", "]"}], "]"}]}], "/", "y0"}]],
              FontColor->RGBColor[0.6, 0.4, 0.2]], ")"}], "BoverM", "*", "vi",
             "*", 
            RowBox[{
             RowBox[{"Vtxall", "[", 
              RowBox[{"[", "j", "]"}], "]"}], "[", 
             RowBox[{"[", "i", "]"}], "]"}], "*", "dt"}]}]}], ";", 
         RowBox[{
          RowBox[{
           RowBox[{"Vtyall", "[", 
            RowBox[{"[", "j", "]"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"i", "+", "1"}], "]"}], "]"}], "=", 
          RowBox[{
           RowBox[{
            RowBox[{"Vtyall", "[", 
             RowBox[{"[", "j", "]"}], "]"}], "[", 
            RowBox[{"[", "i", "]"}], "]"}], "-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"g", " ", "dt"}], "+", 
             RowBox[{
              RowBox[{"(", 
               StyleBox[
                SuperscriptBox["E", 
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{
                    RowBox[{"ytall", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "/", "y0"}]],
                FontColor->RGBColor[0.6, 0.4, 0.2]], ")"}], "BoverM", "*", 
              "vi", "*", 
              RowBox[{
               RowBox[{"Vtyall", "[", 
                RowBox[{"[", "j", "]"}], "]"}], "[", 
               RowBox[{"[", "i", "]"}], "]"}], "*", "dt"}]}], ")"}]}]}], ";", 
         RowBox[{
          RowBox[{
           RowBox[{"xtall", "[", 
            RowBox[{"[", "j", "]"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"i", "+", "1"}], "]"}], "]"}], "=", 
          RowBox[{
           RowBox[{
            RowBox[{"xtall", "[", 
             RowBox[{"[", "j", "]"}], "]"}], "[", 
            RowBox[{"[", "i", "]"}], "]"}], "+", 
           RowBox[{
            RowBox[{
             RowBox[{"Vtxall", "[", 
              RowBox[{"[", "j", "]"}], "]"}], "[", 
             RowBox[{"[", "i", "]"}], "]"}], "dt"}]}]}], ";", 
         RowBox[{
          RowBox[{
           RowBox[{"ytall", "[", 
            RowBox[{"[", "j", "]"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"i", "+", "1"}], "]"}], "]"}], "=", 
          RowBox[{
           RowBox[{
            RowBox[{"ytall", "[", 
             RowBox[{"[", "j", "]"}], "]"}], "[", 
            RowBox[{"[", "i", "]"}], "]"}], "+", 
           RowBox[{
            RowBox[{
             RowBox[{"Vtyall", "[", 
              RowBox[{"[", "j", "]"}], "]"}], "[", 
             RowBox[{"[", "i", "]"}], "]"}], "dt"}]}]}]}]}], "]"}]}], "]"}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Pairs", " ", "to", " ", "plot"}], ",", " ", 
     RowBox[{
     "we", " ", "divide", " ", "by", " ", "1000", " ", "to", " ", "get", " ", 
      "distances", " ", "in", " ", "km"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"xandy1", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"ytall", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "i"}], "]"}], "]"}], "/", "1000."}], "<=", 
          RowBox[{"-", "0.01"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xtall", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "i"}], "]"}], "]"}], ",", 
           RowBox[{"ytall", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "i"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "tL", "]"}]}], "}"}]}], "]"}]}], ";", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
      "If", " ", "condition", " ", "to", " ", "aviod", " ", "going", " ", 
       "below", " ", "y"}], "=", "0"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"xandy2", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"ytall", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "i"}], "]"}], "]"}], "/", "1000."}], "<=", 
          RowBox[{"-", "0.01"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xtall", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "i"}], "]"}], "]"}], ",", 
           RowBox[{"ytall", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "i"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "tL", "]"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{"(*", 
    RowBox[{"Plotting", " ", "All"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"F1", "=", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"xandy1", "/", "1000."}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Red", ",", 
          RowBox[{"PointSize", "[", "0.006", "]"}]}], "}"}]}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", "\"\<\[Theta]=35\>\"", "}"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"F2", "=", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"xandy2", "/", "1000."}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Orange", ",", 
          RowBox[{"PointSize", "[", "0.006", "]"}]}], "}"}]}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", "\"\<\[Theta]=45\>\"", "}"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{"F1", ",", "F2", ",", 
     RowBox[{"PlotRange", "->", "All"}], ",", 
     RowBox[{"AxesOrigin", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<x[t] (km)\>\"", ",", "\"\<y[t] (km)\>\""}], "}"}]}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8450900768831453`*^9, 3.845090083827798*^9}, {
   3.845090304707277*^9, 3.845090514431078*^9}, {3.845090580652946*^9, 
   3.8450906864585466`*^9}, {3.8450907512676754`*^9, 3.845090829519664*^9}, {
   3.845090867015348*^9, 3.8450909025864663`*^9}, {3.8450909965730577`*^9, 
   3.84509103297573*^9}, {3.845091201601137*^9, 3.8450912093000727`*^9}, {
   3.8450912398791337`*^9, 3.845091314433841*^9}, {3.84509179619238*^9, 
   3.8450918309743056`*^9}, {3.8450918729108925`*^9, 3.84509205532449*^9}, {
   3.8450921182438297`*^9, 3.8450921248448677`*^9}, {3.845092175089669*^9, 
   3.84509218672535*^9}, {3.8450922618702183`*^9, 3.8450923928084774`*^9}, {
   3.8450975352281146`*^9, 3.8450976427177095`*^9}, {3.8450979661158357`*^9, 
   3.8450979724449115`*^9}, 3.845199526659231*^9, {3.8453009626453257`*^9, 
   3.8453009653009677`*^9}, {3.851844708415124*^9, 3.851844770596904*^9}, {
   3.851844943774209*^9, 3.85184494554644*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"4a00a4e6-010a-4e90-b4dc-5f83f1282380"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{}, {{{
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          PointSize[0.006]], 
         PointBox[CompressedData["
1:eJztemk0lV/YvnkezkxknudzHA5SPZdKhQohlDRq0GSoUMpQComUEiWF/FRE
oZAkUpGIkKjImAyhlLn/eb/+1/v9/dL15axr7efc972vvZ97WOtR2X5ovRcf
Dw/PAD8Pz//8/v9Y8uhBYfmmHOIjTcj0SmwG0TrtSbJ0fEoU6dYMvwktIDo/
TIkwJqqIsCLr68nZZYRG2q6Duxe/JR6dofnu9npBCHxWTLUnGglnoffi5Qeq
iaL4DTt6PzcT8mdikrYfqiN+TZbGzQR9JPr3VBsbFDYQRccSLl+lfiYSzVgr
3Y2aiHftwru2uXQSPE6O84syWwgpgUPm5UpdRLqbdOmHBR8JtvLGpsFv3YSY
jkeNSXQ7UT34jejP6yXoc3c8Xf98Jm6usjpSGNBPJOXlrkljdhKKHnXb3ZcM
EF8S1Sp5dn4lbsicHGzmHSRWN5yMrb7cRYgz5voMqoaIRJsc5b9V3YTr/KjK
zrMjxHTI0Nf0Xz0E7wPZ3CXqo8TExByzRKWPML8comMpMEaIubrtWLG2n3hk
n9Jyr3uMYG13rVoR8I34IFIrHF8xTlTf8E5+mjpA8CXvFR26+ZPY3rdM4cHL
70TqlVHVspO/iD218yEqQ4OEyyNSoojHBGEz5DJEIg0TDrdfptea/yZua1ae
CjMeIWQI/3Bx+h8iqDlnyxGnH8QW8/HdL0f/EFf+vl4dYDFK6C7OOz3/ZpIQ
eX0pPuD1KKEfWi5QmDlFvHRYca50wxhxtWlMejB0mhDZp8de1TNGiLK7q29t
nCHsv/0Il/UdJ5zeyaxvY88Sxrtv+rDmxomyArEXlyXmiMMFL0YuRv4kjL5Y
mTX3zBFbKw8OLaH+Ii7/2PosqXSeCIKdCzvlF1HtY7m/59JfYuXzB+TDmhOE
lONP9U2mPKAkFAjx5k4QVv5ezMibPLA1ZjLaOb+JWzva2oLEeSHp1qbIX/ab
WFAznsE8youASofZoBV/iMCGeMmcTl5I3dA6i5o/BK9sb/wPWz6UXfyT4Go/
SWj47c+ZLODDuYv7Jp+9nyTuhPK2vVbkh4vturBjrlOEr3xH3NZIfmTZJc6e
bZsipC9mWZeP8ePN9wCTAY9pYk2lj8+3jQKYfb979MaXaSJD4vmpj5UCeOfO
mrizZYbootwcu6QviISTcwLinTNEy86rurKXBXGmZEtHxZZZQn6qLGXXnCBy
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
          "]]}}}, {{}, {}}}, {{}, {{{
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0], 
          PointSize[0.006]], 
         PointBox[CompressedData["
1:eJzte2c41m/4t733uM172HvPG/X9kCgkSqSQklEJqaRhJiOVKCmjUElSEg1Z
SalEKJSSsoqKjOz13P/nOJ43z/G8fd79zjff43Nc13Ve577O88VXblfwJl8W
JiamYVYmpv/5/t9kpbhys9LtNvF/vtwCPw4UOFYQvonStmbrKgjRJ1hn9u85
cbBe3ynz13PiT8Rzo1KLN8RQnX7jYbU3RJpA4eCL6BZCMbOsoMa7hbgpXchs
+f09QXcN/mL5+j0h0msfM7/UQawvq3ixp7uDsN+ZIpQu1UX8cVAx7vnzieDU
el5GMugmdKwnjQvmvhAtDQ5bTtl9I8o5vEpeszC+7fI+kzq9hKPTfUNltl4i
hTdmR25FH6ERcZdL9lQf8X1vW7CD1QDhlOEls55tgNgc4bh1/s0gcVPYteB+
zCDhcehaW7HTT+Jtg1PHlqUfRFyrZJJf5xBR9eJkg/mRIaLEaoGmvv0XUfHv
52nfv8PE3o77uvM9v4ni0pPKnb6/idJArrVdO0eI7V4Pzp///IfQLwr+/qZ/
lLDl21uesWGUKMhLX+WvP0ZYrIkKGa35Swz8aqg7NDFGXDox+dY+Y4zouk4q
EXgwTlzavTBr5zhOCO7gNTA+MEEsVjqTw9gmCCIrOuyPziQxMuyV+q5igqj2
q83RH50kLi6TCrcETRLMOy695i7+R6ikkUr45P8R+4QPiBzcM0W0DdSM/mv/
Ryg/D0oLVp4mwtc6FwkmTBE8V8O3M/VPE7IvuWleptPE5Ha3E8rXZggnC3pS
79A0IbTp9UrftllCrdBLOuvyDOHHmvbHmDRH1PQTrGdsZ4k8tctrFdrmCPV6
5uCHU7OEPvGX+3byPPH7IhEneX2OSDz71/DN2gWCJCDv+2jjPCFTb1sTt7JA
zN88rHN+YZ54JyaY2f1kkfD2fbZYULBAGIx2Pmk7sERc1XLrW3BaJL4ZVHH6
qi8TgcdDx1PmFwllmfCQjL5lIvi2lcnu60sEMkO69mSuENRHrNVH7ZeJSfpA
2qgqEx6cF0psm1gm8kIeSx+NY0LM2NSVwCsrRHRQxkT7NybQPK1mb1KZIMO9
I4HFnBlaC+NWpqFM6H7ia81yiRl1Ws6F+18wgf4k/kL7GDNsn/Tn2ZCYkTKr
8vWoPQscFENv1fszo38EiRM3WSA0Kqwz+IQZd/V3zq9mYgVHjNbdO9wsqGd7
nLFjGyuS2c9clNjGgrBs8XqXclZoM7u7qhWxYMZr4StFgA2PGzV29c6xYPRP
xroafzZofhBQxnpWbBR4v9Ogjg0LL+IFbC6zwvXEhoRIaXYEHbsSP/mDFWdP
h4jnHmRHZFP7zDojNjSX7PG/3MQOSfMtjTYn2cA0ZvjRX4kDrcFNu0da2ZCq
klctEMkBqewEzVUUdpjQt4Se7eTA57LDp4z3sYOL2mE/oM2JoFNa77seM+75
Fn9NNIETH0smD6qwcaDT73GdzDdOqIc/a6Q6ceClzTX2JWMu/Ixca1SfxYGp
bf7Vj89xQdd1UkjkJwestmiZOfzgwtW55Qo+fU4M63I1PV3FjUOq/sllJzjx
6Szfc9Z0bnBcn+vheMWJrH9Oe1X+cGPRfis/pzAXwlgnhJXX8EBDe3l/+TYu
uJ4isTNl8qDa39pN8AYXhA9Onns4xoN1C34UyREunPzWMmdjy4u4hCSJFiNu
yLdwpZTn8ML0R2W6YSQ3/BbEMpYnecFStvxrXQM3imIT3ZXs+JD81DaAT4AH
Q3GSZLVcPrzaFO8ZtYUHb+5eVeGZ5kN19i2p/GwepBbL1ry258ex+5m/DvXz
wCSzVtE3jx/5ZS7kWTVeWDj2X/02zQ+dL+1LGiG8iMgXDzZ1EMDHraofhR7x
Iq9A6mNwngAyDYMmCxZ4saH+l0T8tADGRL5kjYIPRc21B47bC4JnqEpy6BQf
EnkFFJ1yBZFzObL0QiMfIlTP7GebEkR24p3icQF+6J6TtmlSFIKn5ORGls38
eBRz04tjoxBOCWl+f3mJH+b/iq/qHhWC/JJbnsVnftwHWdH+uhB2hhd0+pEF
oBR8ms+1WQgmvuHPrb0F8OmU3mHnGSFsl/Yp6MwXQN+HuWOr5ITxL8KgXnZQ
ACVGYWbS9sKwFxnfKqEiiK2bf7T8PCSMgcnvBQ0BghDvMnEruCqMNW8Sf6sX
CaLlNuefLa+F8exG6W7r34IQ5bt+e3pcGFsCH97iJgnBv43rTqKMCLh2cPyz
NxYCPfwXD99aEVg9JhvtcRXCsXV3+6ODRBD/5FDizjAhMO3bt/FnhgictLR4
jS4J4dvCP3+iTgQGpSKf+x8KoVqizSbplwg4prKEgzqEsH5gNftLUVEYLP1u
/vBPCAsXjKsmLEThvO2DuriYMMi+e+NE/ESh4NG2Rt+AoVe2bZhiiiiUCXFD
jU3CiD42c1v1iSiqXaJITAeEUa/tbULtZexXzmcvTRFGcr2SMRePGIi0epnV
94SxxHmnul9fDPt+fA291SQMrsMig6XbxbBtIldx5JcwEgWI+tA4MehKHLQT
5BbBYXQEKd8Vw2fn0CV+FRFYPjFfbuoQQwcOuw5biyDILDvBb1kMIUp8QXm7
RHDs0ABtUlkc2d9jPIyjRaD+tuFb6EZxHPrdTS/MEYGzUmXX4BFxRNh/J888
FQGlbEXBIVccr2L5aAqfRMD54MqHm6/FMXc8101zSgQ+Wq5LE2Pi8A3N/CIi
Ior6ysaHBlIkGHc+ed6pLQpxuqtwgCUJLzWPK4Tbi+J+hJzi+T2M9RF5sRl/
UTiK0FiKU0nY715etDlOFMvfhWorK0jw3DyzeDZXFHr9kUG1vST0a4fTCqpE
0dNUp/CYWwLU6ET17E+iaC9fHs/Xk0DID0I35J8obJ6q/ol1l4Bc+wkbeSEx
XL/FrOQWI4GOTYMxDzTE8DJNuoR6WwK1L35O02zFEHmsPbu7VQLV+ZUV+3eJ
IafXm+ncrAR8TXb1XI5g+MH/+W8DmiSE3W6F518WQ5lnc8g7W0mMiMlnny4T
g7+Hap5nsCRMDht5OL8Tw6f3Dud6L0kiR1a4aXpIDCWXEtZvq5FE82Lp8jFW
cZwNmet/NSgJr+U+jh6yOMILMoLU+aWwcmvVDNVUHOJxmvMxhlLgqVfvwyZx
VH13y3i3XQoJS31dCBRH8PUUV6GTUihMCh6jxouj1pq2zrZICk1Pi0x6romj
wFHrxME2KYjkou54hTgCPpeypM9K4Ux2ydXZ9+II44v5fYcqDdrSul6XP+II
PWdj88RGGsJn9DLPs5NgxZkg/3S/NDbJ7/p8h0KCc2puSulFadw0LnxQYEIC
s87b7KuV0ji1t8AgxomEDauk3GP6pDEj1rHfnOHX4oEjH9y5ZUC8jT3QEcPg
l1giraorg+Sf7Y4bM0lwM9i96o+rDLL5X4vffkCCDjvJriBCBvvv6nb2NZJg
liW30fWGDCZOVl5b7COh8OizbYuNMvgtNRozPU/C0VDu45fHZfABKmdaRSQw
xjNerS4pC7Zz15pPq0vg9Lf1emWrZcHavmeLkpUEojle9un5yoIz86B+LiMu
akMmvhUky+JN6qmDCyESiFlvaSzyQBbpvNYqJokSCHdhmjz4SRYPA3Q8Nl+T
QIqdl0LTsiyMztygOT2SgJvR3nZpJTKW13+N1WqWgPQbUVFvezL82sfO/+6X
QEa1xp+sA2SoqLZvPT0vgQil3YHvMshoD9s2xC0sicsvnHJnqsl4kWK0Ya+K
JJ7v9r8oMUDGSdvpi3dWMdbVmLZo81DQ/pWvuXmzJBb6toya61JgvusNS9se
SXh7xQfClQIFCY81D6MkMfMo7Yv5CQpufOjIOpYuiYIbO2y18ykY9lGVkrsj
idE3DyslXlOAIeXXhc8kUchkZT07QkG3fvxD4U5JPLyZ/qdFlIqNil9Htv+W
xKV+5WdX6VSUcdyMSGCSwuSCU+PuHVTc+Ek/cFFcCvLnXUjyp6iYHPvcHqsu
hWtDbiWdRVRoPisq30RIIcncPze2lYqhqhJZNhcpyE0c+qc0TcXU/nbJjAAp
FExrbv/OT4NX889y3ggpXBrYG36bRoN9Vs7izlQpdKfYugUZ0PCq5NzClZtS
MBvkXtK2oeGgPb26rEIK+al/gn5vpUHZn3lDSbMUFOQpD67vo+EYi96jM71S
CFKoe+sWSYPLgVlWhykp/MafZ5ypNPgVBlmOcEnDy6foUtl1Gu4nph4NkZWG
csu88/ZHNHCp2zzu0JEGp1XbzPJrGvIV3dnJa6SRLUQ6e/ULDbe7IoNsXBl5
saaAZDZKw++nm5ec90hDsGzzlTYmOZxP9agiTkhjr9KglK+oHP7WczwSTJFG
VAAp55+SHE5kFv6ry5PGwaDLKtGmcvh4MibWtVwa8QHCNZz2cphxe7qnuUEa
n3tlfZM95XAy07dcuUsa77rs5XhD5LC5Kipw129pcPcozsTHykHK429W9JI0
1BUVfy9flMPq+FMOMYIyoF2vZD54Sw7/JpcSdsvJQE1zM9FfIYfI9Stu6gYy
iD25rnBjkxzub5ZpeG8tg+fhf/GkRw4l1i1fPBl52bWcyk8eZ8j/92T+W38Z
vF8TIhLJKo/D7OcUZI/KQOf1s81fxOXh56AdsPG0DDjD7ncYqsqjtTv1qG+W
DJof78o+bSaPtq3vvb2KZdB6bvxOt4M8VhSnlc2qZRB0ez+Xxg55aOSOtc82
y2AhvOfh4QPyCN2WfzCzRwa7ba2eVJ2UR6F9Fy/1rwziHc6JMl2SB5XbuSB+
RQaov/eWKJRHw/wD+zZBWaxajh84/lQet1Musa1QZRF5YnxneZM8Og7EdAnq
yiJnqdZ2uEcemRU/37NCFs3plVekx+VhRNOc+7xRFpl1N7avY1XAb71cl/Qd
svA/apAaKq6AyKi4Ef1gWRRbS6y+oqIAxRauprJIWcw7zPhW0RXQ5eAwK3FO
Fo9CQvm67RVg8NTz2I4cWdzcQjWa9VRAXo75ttPFstA5fqZfKEQBtAPt1y5X
yiLYATLKsQoIbuXYfLpRFuz6Fd9MLirgQUHe8R1dsii9vt/QpoBxfvtuOckh
BqY3yTo/UYAc04p9+bQsflebZ29tVEDIMRFWQ3Yyui1kHnl0K+B1qa5jhigZ
rqTn+z1HFXC6otuwR44MFoHohm1Mivi7cLqGS5eMB9tz6l1EFGG+O2+CtJqM
iMptAfaKijiZeOQTlwMZNyPGH682VsT8e9cjPe5kOF268FB7nSIaio51ZviT
wXN3326ZbYoIzBZaMjxMhpRmziu2QEW8ijGdeBhLRtZG675fEYpIv81WLX2e
wd8w7HFziiJSl4/u9skhw+wn7O7mKUJL+/zflCIyQkPv5CSVKaLrnZ5v7mMy
7EYelu96qYihUxZNF1+QUZzknmb6URE8WjEa+9vIcMxPpPMOK2L/TH2SWg8Z
F15r3/08r4i9l6pG3vwiY/V73bECPiV89yR5Oc6QsfQjkD2EogTVgJDeR6wU
vD779K+RrhJuVXhGsgpRIPL0V+mspRJ4d/uaG8pS0PXpleOTzUpQuc1CXa9K
QdJX8TeHfJVwiHxTx8qQgnLHNAXtI0qwaLx/kAoKCjf98x5IVMLejZHj3+0p
+FT552RGphI42LeXxLtRoCyunGJbrARP2aQyIR8KmO5Zn/pXrYTmZwRbVBAF
2wt+BFxtUcJ60zu32o5SkDh/3WJtrxJOso5c5zpFwcA5AdbhCSU0LcmsKJyn
IMD8QU0SmzKunrCuVciigOejWKgKSRk9QQG/OAso4F/ziPpcRRmtx6PiW+9T
QA0TanSnK+Op3JErEZUUuCdkHBy1U4Zlu76aYAMFchUVlGgPZURLnzE/1UrB
z5PfmgWClPGueFPnt88U1OXuO5kZpQyrNIcVyiAFv0UrLRVSlTG6yrjK6i/j
vIkS7+18ZXy881zEfo7xrtQv9GqUK6MwIovLlJWKg19Pv77zUhk0iZ3Xufmp
IMlI1al+VAbxtGiolkTF/dSfzflDytC9ztGzjUbFva9641LzyphRmE/8rEZF
jqa21jleFXTVMv9dbUDFYxv+uBVZFSTZpIonWlDheHl+Zr+2CqT/irI8WkuF
hLlschehgqLQPxWvHanwWkkjrJxV0Kt82OqZGxVyh49JFO5SgZIkU162NxWs
U0NivIdUkKPw8bPnHioMbv+l7zulgnkhiynWUCp0LmUmvr6kArbigKlzx6iM
/muMRaFQBRNfz31fjmW8a9cni45VqCCh4VPl5mQqGrxyY1saGfs7As6cvUCF
bcZosly3Cjq+u7sVZ1ERK972OmREBWJWtXL3r1Ox6Z6RefUyY334xtjlO1SE
2bMPcgipYs0xwTd+ZVQkTyq83iCnihivxRKpSiqm20J+pOqrwq9vZ1HpcyoK
VjdYflijivn1OtXajVS0vpz7IrxFFe1DDiPn2xjndbofbfBThRk9m/j0iQrX
BHp7/BFViE3OPGH7TkWSQpdRdaIqquQNvUg/qSgtjvg6dkUVFwmKIf8oFW2K
g01yd1QRZhVBDP+jIn30NbtTlSqmK4VPFS1QEdD+Nel4syosphrjVJlpOCHY
vu1GjyoEhnoCgthoqHB0O9b4VxVWN2TGCzhpuFIt8GuESQ36gh3U9zw0DPPk
3BEQUUOEkMfMX0ZfcDI495mmghoKspePMgnTMFr+QH2doRqKajmLWMVo+G6+
57f3WjUculWbNEeioZ5lC9sRVzXY39sn0ydFg0Axy5HT/mpQ83XcWS1Lw/W4
eeuscDXM5NzyTKbSwHr6WfDtJDU0HC4XcZCnIS6kfbY8Uw0/vEpiVxRp2HO7
tLf6jhpm1VtLbqow5Ato0XhRpYYBMYfs1eo0qBfnfnrVrIZXjVvsGjUZfQhx
cfh1jxpeHiFXrdOhIfK5mPerv2r41Nw6WaFHA1GauKqeSR1RglmTZEMa0vw2
nawSVsdeqZvVh4xp8FZo1S+TVwdfoLhLjSkNP0Q9NtwyUIeykVDFvBkN2lsc
2i9bq8PE/fGo2ioaoz5MvE7Yoo6hE+oz9gQNP0Wuah7yU8dOgYR2b0sadO9l
MHkdUUeG41BiwBqGPfuUbNYmqiNimz/JZy2NMS+fXla7og5TQ5koJ1saRorZ
NPiKGLhJ8qXuehpeVzU3/X6qjvU8B3+x2tPg7CM7+PqtOtI6zcbfONBwXF7h
8PVudZyWj/oS60hDba5Q5PERdXwbd7ij7UTD5F1BZudldWzwKdnV7EyD5Drb
FQVBDeypKGHdsZkG8dzPR/9RNeDjs+V8vwsNeynDB57rauAxewHPdlca2vzP
DZ211EBr7M1DL91o+LCzr8d1kwZusLq2yrvT4Ggyt4XsowErpifUg9sY93n0
O/Ye1MDGdY27H22noST9bmN+nAZieU/n/fGgQXjGu3Fnuga4+iY+invRkDHC
spFSoIGh9mVu/R00zCPd/dMjxnm/ArqlNw0BkqTfKa800H/le8CanTSULkex
rf2kgdnF/Cumu2jY/+NNwcyQBl7c622m+dDAp/3z/a05DZwOSOFcZOBf118l
beHRRMWpHIZENFiddmtiktHEIu9iWrIvDZpZUVm3NTSxtuzKEOFHQzSf0uxG
C028G/Gx/8nApRfU+icdNCE4ZlMd48/oQ/fs80z31MSdJ1oQDGDEp+NLf8Mg
TThJsnSmMDD/WQHWtkhNpFcUR7PuocF4RVp3X4omXqmKW+1l4PdClX9ZcjXx
6Iuc7AsGLqmvtLp8XxMH6E+EhPfSIFT2Q02jThNzeVVyzgysJcFSUNmmianD
Is5xDPzkdevj9X2a2EzJzi1i4HXWIt4dE5oYEjUXecHAL+7GXvNi1QLLz5Zb
rQxc9+Fz2KCoFuZtzHz+B3/Sb/2xR1ELZdzuNvUMPDYrNvbbUAuyBjybbzNw
BNfWC/vWaiF/UT05loFrF6zbhrZo4UZ3xpgjAw+pxBX5+Gmh/azmKQEGts19
Su0O00IW6YVdHUMfX/ppvU0JWghpNV3jz8DiZ1K/v8zQglrw7hAmBo6e3adl
UqiF9Vy09jMMe6nfLpUsYNgS0tYhfAw8mD6TL/JGC0UXCm2iGPZ+Gd/SdKJL
C0mfFd0HGf7glHh9aWBYCwc/pNxezcD/Hgcy281r4elQLf1//Flatpb/Lo82
MoSTed8y/C2u++kpv4w2iK4G2jIjHvbqFfAEamiDxW/dcUUG1s3RXnplro0d
0QOyqxnx9MFiJE3OQRtcmcGc9ox4c3u2rSncQxvj7dUW9ox4ZKn7c7s5UBuO
PNdrVjPidbFeXJMWoY2UtolzSox4HrBYuznkrDa2JUSXrDDi3fv8T2pNjjYO
u1Dlmxn5cIfkl8Z9TxvVhvlDZxn5IkxRubOphiHP8hc2K0Y+7Rk5u/fKO21M
+l0LH2bk25mG+davPdqY5q9dG8fIx2dDjT3Uv9pgj+YPEtlCg8SFrRd3rGjj
OOE5eYGRzx84FsazBXUw2hj9kWsTDVVJHLMfqToYv24ne4BRDwIDmgqEdHXw
bcvZ+iZGvbg6m7lsAx1cOyHTIrOBhn1Z1SvHnHTg9fYVvBj1Jqn2RFGxtw4c
RX2lLzLqUWw/eeVLiA622TV4VjPq1deM/iWuGB10pNbwfWbUsw0x/LcMUnWg
t0pO7Rej3r3b9ml+e54Ocj/VlY8w6uGLmYi5mFId1OscKh1g1EthG6PrN+t0
sM6FT66FUU/lnfRnG9p0cPaGF/tdc4Z9VxfMDvbqwOI94R1Jp8Hco/YGy4QO
+obiDNaY0MB92iVSgFkXCS6sMQuMen59YW20NLcuLIfO293SpyG5x2arkrAu
6gZY02x0acjKD+DQkdJF/7K+e5cWIx8dKk+byOnCyG8qb4cGY+4N3zC4Wk0X
kW/lg7pUaVBz0ySt1dMF/C/U2ijTEFPmQ7aj62IVE+3yLQUaMLY0v8FSF5Pj
eXMLjLmZxMNW4rReF1IGk4NrKDRsuhxB3+SsCzGPUa8oGRreNIdkbnLXRejd
IL97kjTcPdrX5rxTF94kp+VWcYZ/uDq/bdyjC3HzYNWfIjTEx2144XBAF7bH
b/8YE2TMzRnro9Yd1cXl2W6zUT4a9E+/EVoTowvmnCHlb9w05Ni8DbdI0oWp
XHFxPQcNZW72jw1TdUEW5XqXxUpD0S/rJo0rupDt/nrGn4mGWy2lj+XydEFL
oXZumKci/tjpo6TburAXYekom6Qin7VBmKdUF2HxGtLMI1ScV90WvfiEYR9p
v9tGP6gYdjB/OfKMoe+/iHjnb1QsH/P4/vW1LpIsLB+6MPqb7N0lbU2tunDV
iqYTjP6nxkfxytNPupiW5ZcQZvRH644XGd/6rovo5CrnRkb/VOOmU5Q2xNiv
4zuyl9FfjW+8NnliTBdNzN9HJhj9V7nvoIjfLAPbc7ntKqbitM1vTkcmPUQ+
qNSsuEGFs8OV94Zcevix5nPoTDYVvyM6Q6WF9HDypI0WOZ2KoZTEoWUJPYyF
De5QP0uF9uAFgz6qHo4+uCpAPUVFVsqXzS9U9FDp67Fq4QSjn3OyXH9TRw8m
AbxjNYeoYMm8KXrKRA8ja7PU9wZSYXbu5wMfQg+/7JfHFn2ocGIeVLa01cPA
RTXbI9sZ/eTRY8HkjXpoEBfX69pExbz2yTOzrnpYW1T5QN6OCkKgK+K9lx72
y8m0brak4s8jlzV3/PSgb2d4NtCUCv2I5u7YID0wMfGOBupQYb5Xys49TA82
JgXTLspUPLHgT9aO1AMrj9AdRTIVQXtOXGOJ18OWF1sEu0WpeC5DT+g4qweW
8QSV4zxU2BiLWd1K1wOn39MZZmYqVm/+2nIkRw80Z7a4kBkKVF/u0rW9yThv
Hd3aMEKBVcYBH/G7eoi3cuhlG2DMN+c6AvrK9TD1NumpOmMeaVBxx70qPbT+
8vQ2ZcwrS9kvh8Nf6KGWGO/UYswzi9/7dls16SFYIESet4rCmBePlPK064Fs
x2PbWkoB3X59S9sXPSjmT66LuEWBOYtsTUa/HpLO+WiK5FAQWfQgwuO3Hk57
pE+dS6PAeeAdP21SD+rmrwsnEyjI5tcL6pvXw3Nbwg4RFLhaXb56nUUfqZmW
PYdCKZjxeH7Vh0cfDpul96T6UzA0vS9IXkQfD25K/k33oGAiwIn/u5Q+yD9S
DsU6U3DvrdrxbDl9iF/6uORqQ8HkzP3Hbmr6+BVinyJqTsGqhJznwnr6sA23
13qiQ4FM+82sRlN9NDFZdFsrUnB5PtIqFvooqDmVWyFJwbVP3Y9M1+lD6316
JImfAl+B0NmRjfqIbP96bDszBe+W/3Lku+lDeuDDlcQpMt62cPS57NBHQunE
t5xhMl7u9U3i8NfHVHKFc9ZXMmZOVCw+CtLH5/3Fk9GM+fvDkRJzvzB95HG7
NDq+JGNH6sRasUh92Heu+sxWwZjHX2jK1J1i6Ce7qHK9mIyyNo7KwLOMdWbl
J2q5ZJSuVlWSSNfHzUtuKZcvkBHtZuL+LFsfdgN6D/7GkxGq3eUacEMfW6e3
KekcI+NsdilZsJih33DEiOt+MoYtfe6Wl+kjbNZO0N+bjPlTKezulfrQSziS
smMzGRMZnUqLz/WhplcTChsyeIM/8l9t1IdTR081N52M/kad6tXv9bGSf/Vw
pQYZrwxOGPR06aNS+fXVLRQy2BfcQk706mPeVWP1JyEy1ph7HpQa1sdYbs7W
NawM+3xStHg4xpBvam7i0pQs6mNsGjfOMuTvoIl8+CmL0ntbycMr+uDaMft0
pksWF/LHDGM4DdC1LXCCrUkWxL58IUlBA3y1Daqer5bF/V6m+3dJBvgbMEXr
KpHFxqIcESuKASLaluVy82RhZsRt2qFkgIOhZ19uvCCLlJr3VH8tA0iqFAkN
xcmizDHxzYyhARbrfLj2hMki8+kjwwQLA/RJtZS+95cF741hb3FrAzwgcYoo
ucti5OidDfn2Bgio0dT2tpNFTPipea3NBuCx8ueNM5dF+e0VvyfbDHCLZ+De
eU1ZbB3MTbPcZYANDZ3keLIs9reNnnizxwD8h4967haQhXfffiWnAwZgCuM7
qLEigy3b85I7wg2w/mKnz5e/MtjhyFviHm0AJTElo0PfZfA6WzOlO8EAM7X2
f6ZaZbBhJk7DK8UA7lM3znnXyWBXT9rJnksGMH6QKldeKoOD+R8ueV41QE/e
0aKxPBnI7q7f/eWmARTV32qT0mQQLPb1j9tdA0SFL5QpxspA93Cm9odyA+im
xBOyoTIQkzqktqHKAH6b/nYu7pTBgk9v98t6A+xNr41qcJaBQfLWdaveGqBV
JZE4aimDsnTHfWXvDXC777uMuB5DHw+TtaqfDfDkYYB0Jk0GpNOnOrJ6DXC3
/CW4hGSwMbtIRmDYADsVbzL6ImlM95EkosYMIJtYKZM7Ko2OaPqr0RkDfLj3
4subr9Jo3Bet4bligKPPTn7ubpLGUuDWNY0chlhjX0/uqpQGTU5LwFjAEMtO
W+7UFEmjcDYgOVfcEN4uoklnr0iD2/TwU26yIXb69VStTZTGxExF5gFFQ1wy
uObwM0wacUpXNT5pGOK0sM3qUF9pXIhNCFxlYAgNvrcZPzZL48vNzx55ZoZQ
mtTaYW0lDcuF+QVWK0M4+4dlJutKg/OF3Xrf9YaQHyrbWEWRhoCEhvVLJ0OI
9i7FdfJJg7934bfCVkPIPD6Iz/NSaBmQQcwOQ6h0WiS+GpLC3soh4qufIdJq
Endd7ZRCVHvNL5MgQ+SJpHR4vZDCkbA5IvWwISMuU35yPZDCk5qJ1cMnDHEs
5v3V7GtS+JXH+pOIM4QAWyGz9FkpaPw5aZKebIjJ7gBSzDEpuFg26gynGeKH
fFh/m78UdMmaLeaZhnizgx7Mt0UKtR+WxM7mGcLiquIzXSspBKamMX0tNIT2
kQfdq3WksGm7RarGfUNEUP3eGstK4bigQ0P4Y0OcP/w2TZJbCjK+wtde1Bhi
RuAIfWBKEq1/PksLNhhCzIaj4UqfJAaFpk23NhuiwpZK0FskcUG8ZPZauyE+
0Q7ceV4piVVSzu4/vjDs0VQmbFwoiUdiyts0+g3RThSGX7goifgvYfNBvwyh
f1zy5+doSajIJtNLxw0RdPGjD99+Sdh73yZNzBpidUPdlIq7JOT4JVL1mIyQ
G1F1XWutJLJ9JAuDOY1w3v/RIbKeJMqjx7YVCxjheeSt4BlZSZR59hb+FDeC
t1RqViWXJI60aqTKkY3QNB2xsuefBKqSBUW3KRrBY0NsPst3CfhT32qlahhB
4VNl8qm3EmiezfreoG+EewPOzyceSYDVp0Z9gW6E996HN9jlS0ApYT+vtqUR
Aoe8Dc+clcDNwP6YHeuMoPFha+STcAlcmdt6NmUj436rO/otPhLgmmTXqnE1
Qp32/a2tjhKwWqJ5//Y0glHYm5lKOoNf9jclCV8jFA7vkkhTlMAxg7AIy0Aj
Rh8/UbNJUALWnJJ+ew8aYe72zNTSHAliFjM9qceM0P9hsf7CAAk7P1r/fBxj
hIiVdF2xFhJ6a3UjuxONUJu8c01UBQlfq4fzV1KMcJDMxdZxnYSU4zkuchlG
4LprcUz8HAknToWnWV5lyHux6i7CSWixK9jufdMIWdkbC1x3kVBFdi6JKDbC
AO/rfW4OJHQZ5J+5UmaENWUsHGuMSUgsqJsoe2qEXYs/TkjRSHA+2Pm9qc4I
XjN+nz5zk2B/gsN14LURzgRE0RImxRGdGOY832IE604TT8pXcWy1tnsv8NGI
8R7mX8ptEMeK5Y2Pcj1G8Pza3c5/Xxxtcze9DQaNsP+NAM3vijgaGoMD1/xh
6B+6L/p2rDh652nzzpNGuDGru/xxnzhuPP7ItWPeCJRzhXnjLuI4RirN2Mts
DK4k5YPTq8ShL/7m5iEuY0gF8xz/oSyOw5lm+hGCxnjEWltXJygOehjVIo5k
jOItTzcmzorBctf550lkY3xsitAy6xXDBZabL84qGqPZ5JLPxzdimB88aHle
wxhxXVnzOx6IITFexDRV3xgzYfoLHzLFIGaXfus83Rg1u7mDDE6K4VmsYMo5
GOPOxS/bI/eJITr4wshpW2PsuB7cXL5ZDAUW+s9POTLuG8x422kuhgC2Rd6o
Lf+b344BBTEcaFl5E+ZhDMG1aqlfecUQmm6/EOhjDE9q6N7nk6IoXfXn6s69
xoiuF/iX9kUU16+NlLkcMMb4Lz6TjfWiiDy5jW4TbozArfEWM0Wi6My30DaO
Mv6fd44/OU0U9NvZqYrxxlBKOVfGc0wUrYaxu4TPGuNm3FmTsJ2iWOqcvLZ4
wRjuBkP5zetEwSI+s+5HpjGeuUwtC+mKoijgvMe7PGOkLEhsgYQo/qK+q7zQ
GBO5tfe2L4vgNkta7ZUSY5TpBYj7DIqA4F7mi3hkjL0ymWmuTSJwvcVZ51Vt
jPPuv3SMy0SQrHLv8+oXxrgWOz/NnCkCtea/W8lvGfp3hI9XRIugv/2N2Xyb
MXysaWpe/iLIOGwa1fHJGOLxT26NbhABd6+xUsk3hn8opCP7DEVw37pWI+GH
Mbr2S+e1S4sgvLEx1XPEGB+qynTUmUWQcsXZVf+fMS6t/6oZ+FMYRh/twtkX
jLHb5Vp+ZrMwkm8VT3cym2CTpmDWwzJh7NMObC3gMsFP84206ivCWHU+gu2w
oAnKxVMsSqOE0TnxIdWSZIK+aN75VF9huEfuPMJHNkHBKQGfHfbCEPeSKO9Q
MMGDo39jpPSEsb9u0CZH3QSX+ER3PiMJo6G7UttHzwQ8Lr95XBaFcOBXwl4V
UxOYfJpJau8VQo6GydzwahP0X3s5ZPlKCBuGH3YVrTVBmsVfvexiITgd/suz
18EElztlQ/pThQCNd8kqm00gTWe7J3FECFEHzLf3u5tg6WvAtKkHY/0pNTzH
2wTP52RcbC2FkBS3q3eLvwk2Jyy2WSkLwc7zVzpfkAkqNs8c0+AVgvf37It1
h0xwUVSgnOW7IB5VeHUfOm6C3ccD/iXeFoRrgWigcqwJpsbUm4dDBZF4+KpV
Z6IJfsRfdVGyEMQUd69XXIoJhP1V88zZBfF6W1Wt7iUTCA6vf6P5TgDdh4R2
f8lm8C/M7Z+9JIBfx6vs4q6bIDvrB0fuDgGU37kaqlFkgv2qE+vlVQVg637x
c+t9EwSaP6qPGuOH5r+jMYcem+CFh1Xykyf8KOHU8CPVmODLy+ePm6L5QbWI
TXj0wgS5YdHeVev4IbHVfcDlrQky7HqzE4T48c4y6fh4mwka+APitD/xYQ/T
L/szn0ywK7Vcu/QaHxyrN7kofTOB87OTZYL+fIh7eeVC1SDj/rISdTttPggn
X+Ta9Idh/5c6xd5TvPAqkHgwOGGCvFuSTpureFH4cfrckTkTdB/M1pY/yQs/
LvarnEymuFTH4928nhd1DmI96RymWPOkddFFiBdCg1Mb5PlNESZ/lFzRyQNn
4tifYlFTXIsu/jyXzYPS2ZAnRtKmOCWjt0HChwfC3wrvV9FMkUT6fVZYjQcX
Jv5+sFQxRWFM98OhUW7o+IvKvdQyhfk+pZ7scm44Fny7ZGPI4D/OStM+xo0d
TjTDBjNTFG9uv5hNcCNmde7MGktTWLMKuw6xcUM1Tu17ra0pQss3RQg3cuFt
yKk/dEcG/yAnRckULmSknpB54GKKuuxvuxc3c0GlrHOf6nZT9Mv+21ojyQXr
/m3d2TtNQXbKlfb6yokboS37BANMUaIm/uJLHicqp+cko4NMIbU6P9jEjxNR
9tf6Rg+ZorntockBdU6sTz/5avtxU+T+7DZOGuXATau9DQ0xpuhzrE+IesAB
UwFSj06iKfRKDda6hHHgBtN6/oxzphi/JnGa04wDoaEvNi1eNMXRvCMHriyx
g1Ng/d0dWab4s+o4iaeOHZltl2Tq8kxRwbvnonscO3SF92fTCk3xrrKAI9GW
HTfCT2tH3jOFv1JFYjoPO+7w323tKjfFRWdr49hmNvzUS4sxqDTFtnheDcfz
bFi4MU0k15kiznk8dm4TG27HX+LpfWUK/gsz7nHibJjcqvXd8J0pjBKIptGP
rABLWG18uymMW7mnTTNZkdqifqvzsykyox5N7vJgxb0w9kuKvabQpr7sDaSw
Yq9k7emQn6a4XNHe7fqdBV1WQnFPR0wR03edWS6fBTcm70ez/DPF3hqh/W99
WLAhc2vUunlTcPFIWbgqsSBJuibyDBMdDnKfk+t+MOPKu4yIdxx0jLOnHuUv
ZMadpKxjAvx0lPpmypvtYYZ1ZuQhB1E62HNDb9iqM6OoaWpPohQdx94+lDX+
zQTv/Q/dn1PpyH5Kvc1ezIQs+wNW80p0hDKd8X8UyISGym55XU06Ev9NHV6n
xQS+zKI5H306xPePDxz5skIMO5x9mW5Kx4ddV6flPFaIilfGp16upkPBotAz
pXuZ8Dq71WTSmg5HXja3Zx7LRM+D658p9nRci/9Bfdi9RPD3vd6/zpkONt4X
U/s9lghLj/C/wW501OU4kX5/WSQ4lnZ6pXvSoTgSVau5fZHoszCqeOLD4Od0
Ssfg8wJBMsxb7tpDx9zLDzeWty4Qe3JctOaC6Vg/QfZK+ThPMHUtrSGF0XFZ
xjVzcMs8YfzXzlLvBB1WyvcuM7fPEScuDCvYxdIRnJJxud95jrBUSfjlnUhH
u199V3LLLNFT1Xrh8Dk69tnKZ887zBLp0gcpiRfpkN04QNVtnCGiqqWTLmfS
4S1+9Kam7Qxxtfvg+4JcOt7kpuwfq58mvu5Tn3tQQEfYdlLFcUwTKtRfC1XF
dJzgMH/zrmqKOLHfq+vFAzrUivd+GzadIsQu6p9vfEKHfqrzqubyf0T0FWHq
uxo6nil+UTyq+4/ocSqIa3lBh8dfvU8jdyYJTs+s2neNdNRE117RUJkkWgyy
3r1tpWOPh2axfv4EYS3ndL+hkw6NwR2bWMkTxJzdbp/abjqCbKNbcjLGCdey
mB8P++hw2TXhxyIyTvy12GRaNETH/RJ3D70zY8T3u1Fu2aN0PFe/PKnOMUbQ
y8qszvyjI3pfdm/PyijhM5Axe3SeDrfFct3liRHiUkPHEV8mM7TVlnmWD/4h
NrWSah05zKB3znGC+dNvoj+QrdmIzwyH5B6H/3zzixhasc2VFjHDyofM476V
w8TXodMmSxJm6PSQjz9RPERUxoelfiWbgZ40rqCV85NIMi8vrlQwQ+Wkcu+R
sz8InpCRhAw1Mzx4st3OM2KQ2JnxVu6AjhmUVK//+Ro4QDToz4avMzID8+HT
W+a39xMWHbJnyOZmqN0pKVpm10c4qfS7j8EMTr+ayrjovUT/r3/fn9mYYf/v
3IYF5e/E5PICNcXBDI7neB9JqfUQQT754ts3mSGNv5H5KGs3wb8q7ZniVjMs
TBKppK9dBL3rMPWPJ+N8ASV+8uFHYqR0RrfUxwx5seyswuc6iBsHnk8e3GOG
Xr4YjRDfD8TmmWg/w2AzaEvyKIpYtBE7t/UkTBwyQ2wbt+KYwjvizugp13vH
zPA5L9rE5t0bInGdQpt/tBmyzw+3qh55SfRg1zQlnrF/Ph6ZlDrCYG70xYdk
MyTFdtynJ1UQTd8Om8enmmH+3tAn3/f3iaay61uNM8wwwmq+/rheLrEjSUlm
INsM9UpeN2yP7K79f/wS8x/9R//Rf/Qf/Uf/0X/0H/1H/9H/J/pfQiXpsA==

          "]]}}}, {{}, {}}}}, {
    PlotRange -> All, AxesOrigin -> {0, 0}, AxesLabel -> {
       FormBox["\"x[t] (km)\"", TraditionalForm], 
       FormBox["\"y[t] (km)\"", TraditionalForm]}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 25.175796048208777`}, {0, 5.545114602930728}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"\[Theta]=35\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    PointSize[0.5]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    PointSize[0.5]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"PointSize", "[", "0.006`", "]"}]}], "]"}], "}"}],
                ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"\[Theta]=45\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    PointSize[0.5]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    PointSize[0.5]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"PointSize", "[", "0.006`", "]"}]}], "]"}], "}"}],
                ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8450912803913755`*^9, 3.84509207863089*^9, {3.845092120184415*^9, 
   3.8450921257321067`*^9}, {3.845092176398551*^9, 3.8450921878660283`*^9}, {
   3.8450923674855967`*^9, 3.8450923933295736`*^9}, {3.8450975539953623`*^9, 
   3.8450976125743203`*^9}, 3.8450976563183002`*^9, 3.8450979734431934`*^9, 
   3.845293478401477*^9, 3.8452936461693783`*^9, 3.845293703380875*^9, 
   3.845293805071903*^9, 3.84529401168332*^9, 3.845300966680419*^9, 
   3.8509708310937014`*^9, 3.851844653061576*^9, 3.8518447848796673`*^9, 
   3.851844946259531*^9},
 CellLabel->"Out[56]=",ExpressionUUID->"d67a0d48-b082-479a-830f-3bc8ddb3654c"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Without correction", "Subsection",
 CellChangeTimes->{{3.845097180219293*^9, 
  3.8450971838645353`*^9}},ExpressionUUID->"c1e6e4ae-4bd5-41b8-9020-\
4f9bc54f3377"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Same", " ", "initial", " ", "conditions"}], ",", " ", 
    RowBox[{
    "but", " ", "we", " ", "save", " ", "in", " ", "different", " ", "lists", 
     " ", "to", " ", "combine", " ", "all", " ", "at", " ", "the", " ", 
     RowBox[{"end", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Vtxall2", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"i", "==", "1"}], ",", 
           RowBox[{"v0", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]", "[", 
              RowBox[{"[", "j", "]"}], "]"}], "]"}]}], ",", "0"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", "tL", "]"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", 
         RowBox[{"Length", "[", "\[Theta]", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Vtyall2", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"i", "==", "1"}], ",", 
           RowBox[{"v0", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]", "[", 
              RowBox[{"[", "j", "]"}], "]"}], "]"}]}], ",", "0"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", "tL", "]"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", 
         RowBox[{"Length", "[", "\[Theta]", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"xtall2", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", "tL", "]"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", 
         RowBox[{"Length", "[", "\[Theta]", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ytall2", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", "tL", "]"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", 
         RowBox[{"Length", "[", "\[Theta]", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", "Calculations", "*)"}], "\n", 
   RowBox[{
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"j", "=", "1"}], ",", 
      RowBox[{"j", "<=", " ", 
       RowBox[{"Length", "[", "\[Theta]", "]"}]}], ",", 
      RowBox[{"j", "++"}], ",", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "<", 
         RowBox[{"Length", "[", "tL", "]"}]}], ",", 
        RowBox[{"i", "++"}], ",", 
        RowBox[{
         RowBox[{"vi", "=", 
          SqrtBox[
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Vtxall2", "[", 
                RowBox[{"[", "j", "]"}], "]"}], "[", 
               RowBox[{"[", "i", "]"}], "]"}], ")"}], "2"], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Vtyall2", "[", 
                RowBox[{"[", "j", "]"}], "]"}], "[", 
               RowBox[{"[", "i", "]"}], "]"}], ")"}], "2"]}]]}], ";", 
         RowBox[{
          RowBox[{
           RowBox[{"Vtxall2", "[", 
            RowBox[{"[", "j", "]"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"i", "+", "1"}], "]"}], "]"}], "=", 
          RowBox[{
           RowBox[{
            RowBox[{"Vtxall2", "[", 
             RowBox[{"[", "j", "]"}], "]"}], "[", 
            RowBox[{"[", "i", "]"}], "]"}], "-", 
           RowBox[{"BoverM", "*", "vi", "*", 
            RowBox[{
             RowBox[{"Vtxall2", "[", 
              RowBox[{"[", "j", "]"}], "]"}], "[", 
             RowBox[{"[", "i", "]"}], "]"}], "*", "dt"}]}]}], ";", 
         RowBox[{
          RowBox[{
           RowBox[{"Vtyall2", "[", 
            RowBox[{"[", "j", "]"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"i", "+", "1"}], "]"}], "]"}], "=", 
          RowBox[{
           RowBox[{
            RowBox[{"Vtyall2", "[", 
             RowBox[{"[", "j", "]"}], "]"}], "[", 
            RowBox[{"[", "i", "]"}], "]"}], "-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"g", " ", "dt"}], "+", 
             RowBox[{"BoverM", "*", "vi", "*", 
              RowBox[{
               RowBox[{"Vtyall2", "[", 
                RowBox[{"[", "j", "]"}], "]"}], "[", 
               RowBox[{"[", "i", "]"}], "]"}], "*", "dt"}]}], ")"}]}]}], ";", 
         RowBox[{
          RowBox[{
           RowBox[{"xtall2", "[", 
            RowBox[{"[", "j", "]"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"i", "+", "1"}], "]"}], "]"}], "=", 
          RowBox[{
           RowBox[{
            RowBox[{"xtall2", "[", 
             RowBox[{"[", "j", "]"}], "]"}], "[", 
            RowBox[{"[", "i", "]"}], "]"}], "+", 
           RowBox[{
            RowBox[{
             RowBox[{"Vtxall2", "[", 
              RowBox[{"[", "j", "]"}], "]"}], "[", 
             RowBox[{"[", "i", "]"}], "]"}], "dt"}]}]}], ";", 
         RowBox[{
          RowBox[{
           RowBox[{"ytall2", "[", 
            RowBox[{"[", "j", "]"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"i", "+", "1"}], "]"}], "]"}], "=", 
          RowBox[{
           RowBox[{
            RowBox[{"ytall2", "[", 
             RowBox[{"[", "j", "]"}], "]"}], "[", 
            RowBox[{"[", "i", "]"}], "]"}], "+", 
           RowBox[{
            RowBox[{
             RowBox[{"Vtyall2", "[", 
              RowBox[{"[", "j", "]"}], "]"}], "[", 
             RowBox[{"[", "i", "]"}], "]"}], "dt"}]}]}]}]}], "]"}]}], "]"}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Pairs", " ", "to", " ", "plot"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"xandy3", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"ytall2", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "i"}], "]"}], "]"}], "/", "1000."}], "<=", 
          RowBox[{"-", "0.01"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xtall2", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "i"}], "]"}], "]"}], ",", 
           RowBox[{"ytall2", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "i"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "tL", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"xandy4", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"ytall2", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "i"}], "]"}], "]"}], "/", "1000."}], "<=", 
          RowBox[{"-", "0.01"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xtall2", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "i"}], "]"}], "]"}], ",", 
           RowBox[{"ytall2", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "i"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "tL", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Plotting", " ", "All"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"F3", "=", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"xandy3", "/", "1000."}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Gray", ",", 
          RowBox[{"PointSize", "[", "0.006", "]"}]}], "}"}]}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", "\"\<\[Theta]=35 - Without\>\"", "}"}]}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"F4", "=", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"xandy4", "/", "1000."}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Blue", ",", 
          RowBox[{"PointSize", "[", "0.006", "]"}]}], "}"}]}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", "\"\<\[Theta]=45 - Without\>\"", "}"}]}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{"F3", ",", "F4", ",", 
     RowBox[{"PlotRange", "->", "All"}], ",", 
     RowBox[{"AxesOrigin", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<x[t] (km)\>\"", ",", "\"\<y[t](km)\>\""}], "}"}]}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8450972159147816`*^9, 3.8450973424738812`*^9}, {
  3.845097391562131*^9, 3.8450973947824945`*^9}, {3.8450975021230745`*^9, 
  3.845097527802989*^9}, {3.845097668561101*^9, 3.845097672495618*^9}, {
  3.8450978375367203`*^9, 3.845097951754223*^9}, {3.851844794596198*^9, 
  3.851844817093054*^9}, {3.8518449124641037`*^9, 3.851844915183875*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"011434d0-cfee-43d3-b9fc-f3da0ce6488f"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{}, {{{
         Directive[
          AbsoluteThickness[1.6], 
          GrayLevel[0.5], 
          PointSize[0.006]], 
         PointBox[CompressedData["
1:eJztevc71e8fv73HWcjee54VRV6P7FFRUVGhUiSjpEEpFUWhodA0IopQIXln
RINEqQilUmSEZGXF93x+/V7f/+Db45dzPa5zX891P+77+bzPdVS3hqzZzsPF
xdXPy8X1v8//G8tK75VUb7xLtNME2MmJWUTbjBfJfHUFUab3cqghqpggxyCf
NPGMGDRMVUrKryRaDLRU11g0Egs1dy9u2P6UKB6XM2QTb4naT+70q0H1xF7L
nR+LOluIV/u+HZINaSJINW7L08PbiSVbqv8bKm4mlolMRQhSO4k7x2inx43e
E3ev+q2ccPtKcD8NlMnObiXK7w+811L+RiT69TnwyrYTe9+8WSvX950Y3rZt
hhL3kWgvWf6subCHOHftwvyHiU6iLuC1ssv+XiL8/VnJPOOvhD0t2v2ieT9R
Kbs1sW5rF6GX/GvtzYUBIujg/fV2F78RX7nYfEdqBon2RdLWWk+/E9tfyThr
RQ8TNkJv1QNGu4kru6P5XNRGiHKlvjqq8g9Cukw2YYz7N9FcrP5Xw6mXoDTa
5HF3/SZ49LROpe3tI2TC+hwiqkaJSxZ7dWOu9hNXnD6s9Lo+RjQwIzM/PBkg
fr1vTyuIGCcWdxblp/74SVTtK1YLXD9B/Nx8bL5eeIjY4mJYlsKcJNa37XUK
0h8mjktSwJD8QyT16hHRzr+I4OxlqRYDfwivqTJrIfYI4fP9+rWHT6eIbE2N
nrjaEcJCdIl21o1pIlBlf4v96t/EqB2TxHtwhrg5Gtpt9fk3ISj+3rDFdZb4
+l3o66GAUeLQnjNu8rpzxL1K94tjE6PE7m1/1rVy/SXEePMb7kSNEd0f+vgF
2/4SpgKpqzJFxomXXf4mBQXzxC6unu8dSeNE+8OKm6+iF4g4oUxXd4UJQv/9
w0t0Qy6YzmttoGRNECl/bzk8SuHC5a2yjyn6k8TarkdNf7m5wa2yx2L9vUki
YqXWmYVd3PiByJSvi/8QEfkrvla2cMM5uS+u8L8/hIFbubEFwQO+VZVNT4kp
ov6VfseBXB7MHQxWVq2dIlokzxKhZF40HnvLfGY7TdCr+Kv0I3gxlkSvufdi
mtjp1lua9Y0XL8dsjvY6zBCbHGqjO534kG1voeRXP0PsZW6Lab3PB9O3T1zp
jrOE749XtHNy/Dh1Y/65Xd0sUX3IJlHkOD/uXb9hnGs3R6zZumqFXT8/Ckvf
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
fcSCzJ3Awa7Pk0SayPvI51Us3EydcO89NEn4tE9kpD5jof1F0M2cRZPEriaJ
Bv8GFgSygsfUSiYIswKf6cXNLOy2veTrsXqCaKIbGvJ+4MS/5biU89A48UGw
dEfjJxbSzTs0pmLHidoWi1uXvrFwNNnmno/GONFhxju4sY/F6YuB7dFVY8SG
F05mKsMsdE9xPfb1HCPCye5nvo2x8O3AgwNcE6NEYua2nsxpFh7aL9HfcHaU
EOIps9uywMLHaqeJXbqjxPHipEJFfjZ2ed0cN6/9TdRbmKm0ibARVsDtULfp
N/FFoTf1HIkNHSttCfLkCMHzoUvWXpqN2ett26XPjhA3h3fenJVno1C3M6hN
e4Tw769mF6iykYT5uIKoX4SGq06zlzYbgwvSNK17w0RTYdc+cUM2isZuPpTp
GiL2XjHSKGewkVDreP8EaYjQz3X95GvGxqj5/eUBxCDBfzDuhrglG4Rh/M2G
oJ/EeJHcrmJrNtqczkjlXh0gSnjsrDwc2Vgk4t+yUNdPVGqt1JhbxYbssS8q
7yb6COmuPeTrbpz8bB+w1dT6CCvuSWELTzYynW6vHlrZS8hvk5do92ajofrM
fVb4D6Lwl7pS2HY2nozqJE/d7CHkb6xeKr6LDX+NtUuXNHUTG8N+bM3azUbj
7q+fJv98J3RjNVKX7GfDMPfOf3TV78TzhZUdrw6x8cXwLG3A8RvxipKt63WM
U7/WYE2V0C7ir0jgyaGTbEzWGhq8v/yVELXtGYmIZ0MyYUej2PEvxBb62p0C
F9gYCXqnGfy6k/jhNvXrbAobB/MOd76S/0Q8cZSJkbnOhoir1W5dvw5CrnpU
53omx/4dYc/oe21E+5HGjyq5bIwJVEh/nmklvH0HrmfeZeNEoLOaqXULAb/4
ELUHbGi65U6dPf2O+JM86Zpexkagb4NU/5tmIkMh0Eqhkg0j/aIJK+k3RK65
iU1yLRu1BXk6FiWviANrTq6TqGejoCfy44R5PaHx8V54dBMbz0y/zT6ofkYo
Bk7enXrHRn1k/7ED1jVEU1nKWEA7G7zE2objsRWE84V2p4+f2RgWi7DUPFlK
/O5deODYzQbZSuhq0UIBIVi3yri0nw1V4YBm85/pxBYfkQqVXxx/ht78UQf2
E/+Pvxz+wz/8wz/8wz/8wz/8wz/8wz/8wz/8wz/8wz/8wz/8w/8H+D9My2MB

          "]]}}}, {{}, {}}}, {{}, {{{
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          PointSize[0.006]], 
         PointBox[CompressedData["
1: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
V35H+NgaLp/iXFQYw6+PNf7xzf5cXkUxe3G4rD4K0lt+bePyBoKiH7ep6sMx
+oiv7f/4ZtHrLsb6CD3bwJD5n7zAi/iFFvq46Vvl+ZhrL14/+DjNXh8JtUcH
13H5oCLhezNu+vArX/Ctletvutg93rfb9NFX1buezeV/Xz8UWRSmD6cnScsO
cu8b8SecfPSwPmZX2hbd4eLx7eCVfrdT+thzVPJWDRc/t66ZT5oZ+ggL7DGp
ek3H4wfHJYdv6+NDY65jFhfv5N8IKi7Tx8WtgSJB3Hg4H5Gb3V2vD1UpkQAq
N16iycN1zHZ9aDwMCi9uoWMq7mHdj4/6GL4YyWFw4y025j2XNaKPu7qS+Snc
fPCqqty9boaLhwt/f+9zOlrE8nX4xQywMorRL8vNp1POguQCZQN8z/ctMeDm
W5L7RUdXbQPUntm53oCbjzJO7Cf/WAaIu6j0RoabrwYPMw9dhAF65VTNP1TT
sTwl8zDHiSu/xD7mHDff061+P3/pZYDNW1c/NObWQ8nZdZu3BBig/cvoj7vc
evn57QDxO8KAO9O9JZO59fSHQtkRHWeAgdtVDgHcejM+3fNd5JwB1GVXHbvK
rUeXRcFlp64Y4KutyZsqbr2+zN7RKZNvgDWnRSzruPVsO3XY4XSFAXY+PVRd
yK13ZSFrRbGnBtiQyAiM4/aDB0vsFsR0GCCUVUEQ1+iwf6FTONZnAF3+UttP
3H4ylRgct+2nAX6blB0LvMTt90rZJa2z3Pv8Wivaze1Hpa1rrReJG2J9DrWV
lUJHcd+sSSbJEOqvL30OPUPHVVu1g/PahpB03rzy4kmuvlccw41sQwxgROzG
MTpkWUVWZTDEIetmw0tx3PyYESqVdDLEkZAj9/Ye5vaHwuvnvL0MYR1+4pbF
QToOVv3svOtvCItCP9lve+nIOLX26HS4Ic6YJY/t203H0FHjK8tiuf78SHAf
C+G+d7I9msfOGKIxvXKZWyAda3MeKD67bIjF/LmPrvjS0dBIihC6YwiF4epn
rd50TCs7rcADrn3LPaHfvehoX3MjIaLeEMoCnIrvbnR0eARZ3G4zhGVqSO4r
7h6YueizT1evIRIyzthlOdLhxHCZ5x82xJCq4CV3WzrG7/2UNZoyRFW22a2/
S+ng2Td/yUXYCGnmxyMOWdKRHXkvM1TBCKqHAySGF3Dx/0tQT6sbIblt4a5l
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
R//Rf/Qf/Uf/0X/0H/1H/9F/9P8g/R8zA77h
          "]]}}}, {{}, {}}}}, {
    PlotRange -> All, AxesOrigin -> {0, 0}, AxesLabel -> {
       FormBox["\"x[t] (km)\"", TraditionalForm], 
       FormBox["\"y[t](km)\"", TraditionalForm]}, DisplayFunction -> Identity,
      DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 21.934093298943825`}, {0, 5.2101516056628485`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"\[Theta]=35 - Without\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5], 
                    PointSize[0.5]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5], 
                    PointSize[0.5]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"PointSize", "[", "0.006`", "]"}]}], "]"}], "}"}],
                ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"\[Theta]=45 - Without\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    PointSize[0.5]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    PointSize[0.5]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"PointSize", "[", "0.006`", "]"}]}], "]"}], "}"}],
                ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.845097345920661*^9, 3.8450973963054447`*^9, 3.8450975134178324`*^9, 
   3.8450976737891192`*^9, {3.8450978405157433`*^9, 3.8450978536735497`*^9}, {
   3.8450978921326942`*^9, 3.8450979521571565`*^9}, 3.845293652281574*^9, 
   3.8518448302419004`*^9, 3.8518449378522267`*^9},
 CellLabel->"Out[45]=",ExpressionUUID->"67a3f503-30e6-4189-9cca-f6155ed7edf1"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Combining Both (With and Without Density Correction)", "Subsection",
 CellChangeTimes->{{3.845097418703065*^9, 
  3.845097436243146*^9}},ExpressionUUID->"8e4f8cf8-aee1-41cd-8c8d-\
50c16c017357"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"F1", ",", "F2", ",", "F3", ",", "F4", ",", 
   RowBox[{"PlotRange", "->", "All"}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<x[t] (km)\>\"", ",", "\"\<y[t](km)\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8450974407122264`*^9, 3.845097463074995*^9}, {
   3.84509779317182*^9, 3.8450978267585554`*^9}, 3.8450979832759323`*^9, 
   3.8450980444233913`*^9},
 CellLabel->"In[57]:=",ExpressionUUID->"f7a1f34c-c97f-473e-9512-e81dfb9bec21"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{}, {{{
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          PointSize[0.006]], 
         PointBox[CompressedData["
1:eJztemk0lV/YvnkezkxknudzHA5SPZdKhQohlDRq0GSoUMpQComUEiWF/FRE
oZAkUpGIkKjImAyhlLn/eb/+1/v9/dL15axr7efc972vvZ97WOtR2X5ovRcf
Dw/PAD8Pz//8/v9Y8uhBYfmmHOIjTcj0SmwG0TrtSbJ0fEoU6dYMvwktIDo/
TIkwJqqIsCLr68nZZYRG2q6Duxe/JR6dofnu9npBCHxWTLUnGglnoffi5Qeq
iaL4DTt6PzcT8mdikrYfqiN+TZbGzQR9JPr3VBsbFDYQRccSLl+lfiYSzVgr
3Y2aiHftwru2uXQSPE6O84syWwgpgUPm5UpdRLqbdOmHBR8JtvLGpsFv3YSY
jkeNSXQ7UT34jejP6yXoc3c8Xf98Jm6usjpSGNBPJOXlrkljdhKKHnXb3ZcM
EF8S1Sp5dn4lbsicHGzmHSRWN5yMrb7cRYgz5voMqoaIRJsc5b9V3YTr/KjK
zrMjxHTI0Nf0Xz0E7wPZ3CXqo8TExByzRKWPML8comMpMEaIubrtWLG2n3hk
n9Jyr3uMYG13rVoR8I34IFIrHF8xTlTf8E5+mjpA8CXvFR26+ZPY3rdM4cHL
70TqlVHVspO/iD218yEqQ4OEyyNSoojHBGEz5DJEIg0TDrdfptea/yZua1ae
CjMeIWQI/3Bx+h8iqDlnyxGnH8QW8/HdL0f/EFf+vl4dYDFK6C7OOz3/ZpIQ
eX0pPuD1KKEfWi5QmDlFvHRYca50wxhxtWlMejB0mhDZp8de1TNGiLK7q29t
nCHsv/0Il/UdJ5zeyaxvY88Sxrtv+rDmxomyArEXlyXmiMMFL0YuRv4kjL5Y
mTX3zBFbKw8OLaH+Ii7/2PosqXSeCIKdCzvlF1HtY7m/59JfYuXzB+TDmhOE
lONP9U2mPKAkFAjx5k4QVv5ezMibPLA1ZjLaOb+JWzva2oLEeSHp1qbIX/ab
WFAznsE8youASofZoBV/iMCGeMmcTl5I3dA6i5o/BK9sb/wPWz6UXfyT4Go/
SWj47c+ZLODDuYv7Jp+9nyTuhPK2vVbkh4vturBjrlOEr3xH3NZIfmTZJc6e
bZsipC9mWZeP8ePN9wCTAY9pYk2lj8+3jQKYfb979MaXaSJD4vmpj5UCeOfO
mrizZYbootwcu6QviISTcwLinTNEy86rurKXBXGmZEtHxZZZQn6qLGXXnCBy
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
          "]]}}}, {{}, {}}}, {{}, {{{
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0], 
          PointSize[0.006]], 
         PointBox[CompressedData["
1:eJzte2c41m/4t733uM172HvPG/X9kCgkSqSQklEJqaRhJiOVKCmjUElSEg1Z
SalEKJSSsoqKjOz13P/nOJ43z/G8fd79zjff43Nc13Ve577O88VXblfwJl8W
JiamYVYmpv/5/t9kpbhys9LtNvF/vtwCPw4UOFYQvonStmbrKgjRJ1hn9u85
cbBe3ynz13PiT8Rzo1KLN8RQnX7jYbU3RJpA4eCL6BZCMbOsoMa7hbgpXchs
+f09QXcN/mL5+j0h0msfM7/UQawvq3ixp7uDsN+ZIpQu1UX8cVAx7vnzieDU
el5GMugmdKwnjQvmvhAtDQ5bTtl9I8o5vEpeszC+7fI+kzq9hKPTfUNltl4i
hTdmR25FH6ERcZdL9lQf8X1vW7CD1QDhlOEls55tgNgc4bh1/s0gcVPYteB+
zCDhcehaW7HTT+Jtg1PHlqUfRFyrZJJf5xBR9eJkg/mRIaLEaoGmvv0XUfHv
52nfv8PE3o77uvM9v4ni0pPKnb6/idJArrVdO0eI7V4Pzp///IfQLwr+/qZ/
lLDl21uesWGUKMhLX+WvP0ZYrIkKGa35Swz8aqg7NDFGXDox+dY+Y4zouk4q
EXgwTlzavTBr5zhOCO7gNTA+MEEsVjqTw9gmCCIrOuyPziQxMuyV+q5igqj2
q83RH50kLi6TCrcETRLMOy695i7+R6ikkUr45P8R+4QPiBzcM0W0DdSM/mv/
Ryg/D0oLVp4mwtc6FwkmTBE8V8O3M/VPE7IvuWleptPE5Ha3E8rXZggnC3pS
79A0IbTp9UrftllCrdBLOuvyDOHHmvbHmDRH1PQTrGdsZ4k8tctrFdrmCPV6
5uCHU7OEPvGX+3byPPH7IhEneX2OSDz71/DN2gWCJCDv+2jjPCFTb1sTt7JA
zN88rHN+YZ54JyaY2f1kkfD2fbZYULBAGIx2Pmk7sERc1XLrW3BaJL4ZVHH6
qi8TgcdDx1PmFwllmfCQjL5lIvi2lcnu60sEMkO69mSuENRHrNVH7ZeJSfpA
2qgqEx6cF0psm1gm8kIeSx+NY0LM2NSVwCsrRHRQxkT7NybQPK1mb1KZIMO9
I4HFnBlaC+NWpqFM6H7ia81yiRl1Ws6F+18wgf4k/kL7GDNsn/Tn2ZCYkTKr
8vWoPQscFENv1fszo38EiRM3WSA0Kqwz+IQZd/V3zq9mYgVHjNbdO9wsqGd7
nLFjGyuS2c9clNjGgrBs8XqXclZoM7u7qhWxYMZr4StFgA2PGzV29c6xYPRP
xroafzZofhBQxnpWbBR4v9Ogjg0LL+IFbC6zwvXEhoRIaXYEHbsSP/mDFWdP
h4jnHmRHZFP7zDojNjSX7PG/3MQOSfMtjTYn2cA0ZvjRX4kDrcFNu0da2ZCq
klctEMkBqewEzVUUdpjQt4Se7eTA57LDp4z3sYOL2mE/oM2JoFNa77seM+75
Fn9NNIETH0smD6qwcaDT73GdzDdOqIc/a6Q6ceClzTX2JWMu/Ixca1SfxYGp
bf7Vj89xQdd1UkjkJwestmiZOfzgwtW55Qo+fU4M63I1PV3FjUOq/sllJzjx
6Szfc9Z0bnBcn+vheMWJrH9Oe1X+cGPRfis/pzAXwlgnhJXX8EBDe3l/+TYu
uJ4isTNl8qDa39pN8AYXhA9Onns4xoN1C34UyREunPzWMmdjy4u4hCSJFiNu
yLdwpZTn8ML0R2W6YSQ3/BbEMpYnecFStvxrXQM3imIT3ZXs+JD81DaAT4AH
Q3GSZLVcPrzaFO8ZtYUHb+5eVeGZ5kN19i2p/GwepBbL1ry258ex+5m/DvXz
wCSzVtE3jx/5ZS7kWTVeWDj2X/02zQ+dL+1LGiG8iMgXDzZ1EMDHraofhR7x
Iq9A6mNwngAyDYMmCxZ4saH+l0T8tADGRL5kjYIPRc21B47bC4JnqEpy6BQf
EnkFFJ1yBZFzObL0QiMfIlTP7GebEkR24p3icQF+6J6TtmlSFIKn5ORGls38
eBRz04tjoxBOCWl+f3mJH+b/iq/qHhWC/JJbnsVnftwHWdH+uhB2hhd0+pEF
oBR8ms+1WQgmvuHPrb0F8OmU3mHnGSFsl/Yp6MwXQN+HuWOr5ITxL8KgXnZQ
ACVGYWbS9sKwFxnfKqEiiK2bf7T8PCSMgcnvBQ0BghDvMnEruCqMNW8Sf6sX
CaLlNuefLa+F8exG6W7r34IQ5bt+e3pcGFsCH97iJgnBv43rTqKMCLh2cPyz
NxYCPfwXD99aEVg9JhvtcRXCsXV3+6ODRBD/5FDizjAhMO3bt/FnhgictLR4
jS4J4dvCP3+iTgQGpSKf+x8KoVqizSbplwg4prKEgzqEsH5gNftLUVEYLP1u
/vBPCAsXjKsmLEThvO2DuriYMMi+e+NE/ESh4NG2Rt+AoVe2bZhiiiiUCXFD
jU3CiD42c1v1iSiqXaJITAeEUa/tbULtZexXzmcvTRFGcr2SMRePGIi0epnV
94SxxHmnul9fDPt+fA291SQMrsMig6XbxbBtIldx5JcwEgWI+tA4MehKHLQT
5BbBYXQEKd8Vw2fn0CV+FRFYPjFfbuoQQwcOuw5biyDILDvBb1kMIUp8QXm7
RHDs0ABtUlkc2d9jPIyjRaD+tuFb6EZxHPrdTS/MEYGzUmXX4BFxRNh/J888
FQGlbEXBIVccr2L5aAqfRMD54MqHm6/FMXc8101zSgQ+Wq5LE2Pi8A3N/CIi
Ior6ysaHBlIkGHc+ed6pLQpxuqtwgCUJLzWPK4Tbi+J+hJzi+T2M9RF5sRl/
UTiK0FiKU0nY715etDlOFMvfhWorK0jw3DyzeDZXFHr9kUG1vST0a4fTCqpE
0dNUp/CYWwLU6ET17E+iaC9fHs/Xk0DID0I35J8obJ6q/ol1l4Bc+wkbeSEx
XL/FrOQWI4GOTYMxDzTE8DJNuoR6WwK1L35O02zFEHmsPbu7VQLV+ZUV+3eJ
IafXm+ncrAR8TXb1XI5g+MH/+W8DmiSE3W6F518WQ5lnc8g7W0mMiMlnny4T
g7+Hap5nsCRMDht5OL8Tw6f3Dud6L0kiR1a4aXpIDCWXEtZvq5FE82Lp8jFW
cZwNmet/NSgJr+U+jh6yOMILMoLU+aWwcmvVDNVUHOJxmvMxhlLgqVfvwyZx
VH13y3i3XQoJS31dCBRH8PUUV6GTUihMCh6jxouj1pq2zrZICk1Pi0x6romj
wFHrxME2KYjkou54hTgCPpeypM9K4Ux2ydXZ9+II44v5fYcqDdrSul6XP+II
PWdj88RGGsJn9DLPs5NgxZkg/3S/NDbJ7/p8h0KCc2puSulFadw0LnxQYEIC
s87b7KuV0ji1t8AgxomEDauk3GP6pDEj1rHfnOHX4oEjH9y5ZUC8jT3QEcPg
l1giraorg+Sf7Y4bM0lwM9i96o+rDLL5X4vffkCCDjvJriBCBvvv6nb2NZJg
liW30fWGDCZOVl5b7COh8OizbYuNMvgtNRozPU/C0VDu45fHZfABKmdaRSQw
xjNerS4pC7Zz15pPq0vg9Lf1emWrZcHavmeLkpUEojle9un5yoIz86B+LiMu
akMmvhUky+JN6qmDCyESiFlvaSzyQBbpvNYqJokSCHdhmjz4SRYPA3Q8Nl+T
QIqdl0LTsiyMztygOT2SgJvR3nZpJTKW13+N1WqWgPQbUVFvezL82sfO/+6X
QEa1xp+sA2SoqLZvPT0vgQil3YHvMshoD9s2xC0sicsvnHJnqsl4kWK0Ya+K
JJ7v9r8oMUDGSdvpi3dWMdbVmLZo81DQ/pWvuXmzJBb6toya61JgvusNS9se
SXh7xQfClQIFCY81D6MkMfMo7Yv5CQpufOjIOpYuiYIbO2y18ykY9lGVkrsj
idE3DyslXlOAIeXXhc8kUchkZT07QkG3fvxD4U5JPLyZ/qdFlIqNil9Htv+W
xKV+5WdX6VSUcdyMSGCSwuSCU+PuHVTc+Ek/cFFcCvLnXUjyp6iYHPvcHqsu
hWtDbiWdRVRoPisq30RIIcncPze2lYqhqhJZNhcpyE0c+qc0TcXU/nbJjAAp
FExrbv/OT4NX889y3ggpXBrYG36bRoN9Vs7izlQpdKfYugUZ0PCq5NzClZtS
MBvkXtK2oeGgPb26rEIK+al/gn5vpUHZn3lDSbMUFOQpD67vo+EYi96jM71S
CFKoe+sWSYPLgVlWhykp/MafZ5ypNPgVBlmOcEnDy6foUtl1Gu4nph4NkZWG
csu88/ZHNHCp2zzu0JEGp1XbzPJrGvIV3dnJa6SRLUQ6e/ULDbe7IoNsXBl5
saaAZDZKw++nm5ec90hDsGzzlTYmOZxP9agiTkhjr9KglK+oHP7WczwSTJFG
VAAp55+SHE5kFv6ry5PGwaDLKtGmcvh4MibWtVwa8QHCNZz2cphxe7qnuUEa
n3tlfZM95XAy07dcuUsa77rs5XhD5LC5Kipw129pcPcozsTHykHK429W9JI0
1BUVfy9flMPq+FMOMYIyoF2vZD54Sw7/JpcSdsvJQE1zM9FfIYfI9Stu6gYy
iD25rnBjkxzub5ZpeG8tg+fhf/GkRw4l1i1fPBl52bWcyk8eZ8j/92T+W38Z
vF8TIhLJKo/D7OcUZI/KQOf1s81fxOXh56AdsPG0DDjD7ncYqsqjtTv1qG+W
DJof78o+bSaPtq3vvb2KZdB6bvxOt4M8VhSnlc2qZRB0ez+Xxg55aOSOtc82
y2AhvOfh4QPyCN2WfzCzRwa7ba2eVJ2UR6F9Fy/1rwziHc6JMl2SB5XbuSB+
RQaov/eWKJRHw/wD+zZBWaxajh84/lQet1Musa1QZRF5YnxneZM8Og7EdAnq
yiJnqdZ2uEcemRU/37NCFs3plVekx+VhRNOc+7xRFpl1N7avY1XAb71cl/Qd
svA/apAaKq6AyKi4Ef1gWRRbS6y+oqIAxRauprJIWcw7zPhW0RXQ5eAwK3FO
Fo9CQvm67RVg8NTz2I4cWdzcQjWa9VRAXo75ttPFstA5fqZfKEQBtAPt1y5X
yiLYATLKsQoIbuXYfLpRFuz6Fd9MLirgQUHe8R1dsii9vt/QpoBxfvtuOckh
BqY3yTo/UYAc04p9+bQsflebZ29tVEDIMRFWQ3Yyui1kHnl0K+B1qa5jhigZ
rqTn+z1HFXC6otuwR44MFoHohm1Mivi7cLqGS5eMB9tz6l1EFGG+O2+CtJqM
iMptAfaKijiZeOQTlwMZNyPGH682VsT8e9cjPe5kOF268FB7nSIaio51ZviT
wXN3326ZbYoIzBZaMjxMhpRmziu2QEW8ijGdeBhLRtZG675fEYpIv81WLX2e
wd8w7HFziiJSl4/u9skhw+wn7O7mKUJL+/zflCIyQkPv5CSVKaLrnZ5v7mMy
7EYelu96qYihUxZNF1+QUZzknmb6URE8WjEa+9vIcMxPpPMOK2L/TH2SWg8Z
F15r3/08r4i9l6pG3vwiY/V73bECPiV89yR5Oc6QsfQjkD2EogTVgJDeR6wU
vD779K+RrhJuVXhGsgpRIPL0V+mspRJ4d/uaG8pS0PXpleOTzUpQuc1CXa9K
QdJX8TeHfJVwiHxTx8qQgnLHNAXtI0qwaLx/kAoKCjf98x5IVMLejZHj3+0p
+FT552RGphI42LeXxLtRoCyunGJbrARP2aQyIR8KmO5Zn/pXrYTmZwRbVBAF
2wt+BFxtUcJ60zu32o5SkDh/3WJtrxJOso5c5zpFwcA5AdbhCSU0LcmsKJyn
IMD8QU0SmzKunrCuVciigOejWKgKSRk9QQG/OAso4F/ziPpcRRmtx6PiW+9T
QA0TanSnK+Op3JErEZUUuCdkHBy1U4Zlu76aYAMFchUVlGgPZURLnzE/1UrB
z5PfmgWClPGueFPnt88U1OXuO5kZpQyrNIcVyiAFv0UrLRVSlTG6yrjK6i/j
vIkS7+18ZXy881zEfo7xrtQv9GqUK6MwIovLlJWKg19Pv77zUhk0iZ3Xufmp
IMlI1al+VAbxtGiolkTF/dSfzflDytC9ztGzjUbFva9641LzyphRmE/8rEZF
jqa21jleFXTVMv9dbUDFYxv+uBVZFSTZpIonWlDheHl+Zr+2CqT/irI8WkuF
hLlschehgqLQPxWvHanwWkkjrJxV0Kt82OqZGxVyh49JFO5SgZIkU162NxWs
U0NivIdUkKPw8bPnHioMbv+l7zulgnkhiynWUCp0LmUmvr6kArbigKlzx6iM
/muMRaFQBRNfz31fjmW8a9cni45VqCCh4VPl5mQqGrxyY1saGfs7As6cvUCF
bcZosly3Cjq+u7sVZ1ERK972OmREBWJWtXL3r1Ox6Z6RefUyY334xtjlO1SE
2bMPcgipYs0xwTd+ZVQkTyq83iCnihivxRKpSiqm20J+pOqrwq9vZ1HpcyoK
VjdYflijivn1OtXajVS0vpz7IrxFFe1DDiPn2xjndbofbfBThRk9m/j0iQrX
BHp7/BFViE3OPGH7TkWSQpdRdaIqquQNvUg/qSgtjvg6dkUVFwmKIf8oFW2K
g01yd1QRZhVBDP+jIn30NbtTlSqmK4VPFS1QEdD+Nel4syosphrjVJlpOCHY
vu1GjyoEhnoCgthoqHB0O9b4VxVWN2TGCzhpuFIt8GuESQ36gh3U9zw0DPPk
3BEQUUOEkMfMX0ZfcDI495mmghoKspePMgnTMFr+QH2doRqKajmLWMVo+G6+
57f3WjUculWbNEeioZ5lC9sRVzXY39sn0ydFg0Axy5HT/mpQ83XcWS1Lw/W4
eeuscDXM5NzyTKbSwHr6WfDtJDU0HC4XcZCnIS6kfbY8Uw0/vEpiVxRp2HO7
tLf6jhpm1VtLbqow5Ato0XhRpYYBMYfs1eo0qBfnfnrVrIZXjVvsGjUZfQhx
cfh1jxpeHiFXrdOhIfK5mPerv2r41Nw6WaFHA1GauKqeSR1RglmTZEMa0vw2
nawSVsdeqZvVh4xp8FZo1S+TVwdfoLhLjSkNP0Q9NtwyUIeykVDFvBkN2lsc
2i9bq8PE/fGo2ioaoz5MvE7Yoo6hE+oz9gQNP0Wuah7yU8dOgYR2b0sadO9l
MHkdUUeG41BiwBqGPfuUbNYmqiNimz/JZy2NMS+fXla7og5TQ5koJ1saRorZ
NPiKGLhJ8qXuehpeVzU3/X6qjvU8B3+x2tPg7CM7+PqtOtI6zcbfONBwXF7h
8PVudZyWj/oS60hDba5Q5PERdXwbd7ij7UTD5F1BZudldWzwKdnV7EyD5Drb
FQVBDeypKGHdsZkG8dzPR/9RNeDjs+V8vwsNeynDB57rauAxewHPdlca2vzP
DZ211EBr7M1DL91o+LCzr8d1kwZusLq2yrvT4Ggyt4XsowErpifUg9sY93n0
O/Ye1MDGdY27H22noST9bmN+nAZieU/n/fGgQXjGu3Fnuga4+iY+invRkDHC
spFSoIGh9mVu/R00zCPd/dMjxnm/ArqlNw0BkqTfKa800H/le8CanTSULkex
rf2kgdnF/Cumu2jY/+NNwcyQBl7c622m+dDAp/3z/a05DZwOSOFcZOBf118l
beHRRMWpHIZENFiddmtiktHEIu9iWrIvDZpZUVm3NTSxtuzKEOFHQzSf0uxG
C028G/Gx/8nApRfU+icdNCE4ZlMd48/oQ/fs80z31MSdJ1oQDGDEp+NLf8Mg
TThJsnSmMDD/WQHWtkhNpFcUR7PuocF4RVp3X4omXqmKW+1l4PdClX9ZcjXx
6Iuc7AsGLqmvtLp8XxMH6E+EhPfSIFT2Q02jThNzeVVyzgysJcFSUNmmianD
Is5xDPzkdevj9X2a2EzJzi1i4HXWIt4dE5oYEjUXecHAL+7GXvNi1QLLz5Zb
rQxc9+Fz2KCoFuZtzHz+B3/Sb/2xR1ELZdzuNvUMPDYrNvbbUAuyBjybbzNw
BNfWC/vWaiF/UT05loFrF6zbhrZo4UZ3xpgjAw+pxBX5+Gmh/azmKQEGts19
Su0O00IW6YVdHUMfX/ppvU0JWghpNV3jz8DiZ1K/v8zQglrw7hAmBo6e3adl
UqiF9Vy09jMMe6nfLpUsYNgS0tYhfAw8mD6TL/JGC0UXCm2iGPZ+Gd/SdKJL
C0mfFd0HGf7glHh9aWBYCwc/pNxezcD/Hgcy281r4elQLf1//Flatpb/Lo82
MoSTed8y/C2u++kpv4w2iK4G2jIjHvbqFfAEamiDxW/dcUUG1s3RXnplro0d
0QOyqxnx9MFiJE3OQRtcmcGc9ox4c3u2rSncQxvj7dUW9ox4ZKn7c7s5UBuO
PNdrVjPidbFeXJMWoY2UtolzSox4HrBYuznkrDa2JUSXrDDi3fv8T2pNjjYO
u1Dlmxn5cIfkl8Z9TxvVhvlDZxn5IkxRubOphiHP8hc2K0Y+7Rk5u/fKO21M
+l0LH2bk25mG+davPdqY5q9dG8fIx2dDjT3Uv9pgj+YPEtlCg8SFrRd3rGjj
OOE5eYGRzx84FsazBXUw2hj9kWsTDVVJHLMfqToYv24ne4BRDwIDmgqEdHXw
bcvZ+iZGvbg6m7lsAx1cOyHTIrOBhn1Z1SvHnHTg9fYVvBj1Jqn2RFGxtw4c
RX2lLzLqUWw/eeVLiA622TV4VjPq1deM/iWuGB10pNbwfWbUsw0x/LcMUnWg
t0pO7Rej3r3b9ml+e54Ocj/VlY8w6uGLmYi5mFId1OscKh1g1EthG6PrN+t0
sM6FT66FUU/lnfRnG9p0cPaGF/tdc4Z9VxfMDvbqwOI94R1Jp8Hco/YGy4QO
+obiDNaY0MB92iVSgFkXCS6sMQuMen59YW20NLcuLIfO293SpyG5x2arkrAu
6gZY02x0acjKD+DQkdJF/7K+e5cWIx8dKk+byOnCyG8qb4cGY+4N3zC4Wk0X
kW/lg7pUaVBz0ySt1dMF/C/U2ijTEFPmQ7aj62IVE+3yLQUaMLY0v8FSF5Pj
eXMLjLmZxMNW4rReF1IGk4NrKDRsuhxB3+SsCzGPUa8oGRreNIdkbnLXRejd
IL97kjTcPdrX5rxTF94kp+VWcYZ/uDq/bdyjC3HzYNWfIjTEx2144XBAF7bH
b/8YE2TMzRnro9Yd1cXl2W6zUT4a9E+/EVoTowvmnCHlb9w05Ni8DbdI0oWp
XHFxPQcNZW72jw1TdUEW5XqXxUpD0S/rJo0rupDt/nrGn4mGWy2lj+XydEFL
oXZumKci/tjpo6TburAXYekom6Qin7VBmKdUF2HxGtLMI1ScV90WvfiEYR9p
v9tGP6gYdjB/OfKMoe+/iHjnb1QsH/P4/vW1LpIsLB+6MPqb7N0lbU2tunDV
iqYTjP6nxkfxytNPupiW5ZcQZvRH644XGd/6rovo5CrnRkb/VOOmU5Q2xNiv
4zuyl9FfjW+8NnliTBdNzN9HJhj9V7nvoIjfLAPbc7ntKqbitM1vTkcmPUQ+
qNSsuEGFs8OV94Zcevix5nPoTDYVvyM6Q6WF9HDypI0WOZ2KoZTEoWUJPYyF
De5QP0uF9uAFgz6qHo4+uCpAPUVFVsqXzS9U9FDp67Fq4QSjn3OyXH9TRw8m
AbxjNYeoYMm8KXrKRA8ja7PU9wZSYXbu5wMfQg+/7JfHFn2ocGIeVLa01cPA
RTXbI9sZ/eTRY8HkjXpoEBfX69pExbz2yTOzrnpYW1T5QN6OCkKgK+K9lx72
y8m0brak4s8jlzV3/PSgb2d4NtCUCv2I5u7YID0wMfGOBupQYb5Xys49TA82
JgXTLspUPLHgT9aO1AMrj9AdRTIVQXtOXGOJ18OWF1sEu0WpeC5DT+g4qweW
8QSV4zxU2BiLWd1K1wOn39MZZmYqVm/+2nIkRw80Z7a4kBkKVF/u0rW9yThv
Hd3aMEKBVcYBH/G7eoi3cuhlG2DMN+c6AvrK9TD1NumpOmMeaVBxx70qPbT+
8vQ2ZcwrS9kvh8Nf6KGWGO/UYswzi9/7dls16SFYIESet4rCmBePlPK064Fs
x2PbWkoB3X59S9sXPSjmT66LuEWBOYtsTUa/HpLO+WiK5FAQWfQgwuO3Hk57
pE+dS6PAeeAdP21SD+rmrwsnEyjI5tcL6pvXw3Nbwg4RFLhaXb56nUUfqZmW
PYdCKZjxeH7Vh0cfDpul96T6UzA0vS9IXkQfD25K/k33oGAiwIn/u5Q+yD9S
DsU6U3DvrdrxbDl9iF/6uORqQ8HkzP3Hbmr6+BVinyJqTsGqhJznwnr6sA23
13qiQ4FM+82sRlN9NDFZdFsrUnB5PtIqFvooqDmVWyFJwbVP3Y9M1+lD6316
JImfAl+B0NmRjfqIbP96bDszBe+W/3Lku+lDeuDDlcQpMt62cPS57NBHQunE
t5xhMl7u9U3i8NfHVHKFc9ZXMmZOVCw+CtLH5/3Fk9GM+fvDkRJzvzB95HG7
NDq+JGNH6sRasUh92Heu+sxWwZjHX2jK1J1i6Ce7qHK9mIyyNo7KwLOMdWbl
J2q5ZJSuVlWSSNfHzUtuKZcvkBHtZuL+LFsfdgN6D/7GkxGq3eUacEMfW6e3
KekcI+NsdilZsJih33DEiOt+MoYtfe6Wl+kjbNZO0N+bjPlTKezulfrQSziS
smMzGRMZnUqLz/WhplcTChsyeIM/8l9t1IdTR081N52M/kad6tXv9bGSf/Vw
pQYZrwxOGPR06aNS+fXVLRQy2BfcQk706mPeVWP1JyEy1ph7HpQa1sdYbs7W
NawM+3xStHg4xpBvam7i0pQs6mNsGjfOMuTvoIl8+CmL0ntbycMr+uDaMft0
pksWF/LHDGM4DdC1LXCCrUkWxL58IUlBA3y1Daqer5bF/V6m+3dJBvgbMEXr
KpHFxqIcESuKASLaluVy82RhZsRt2qFkgIOhZ19uvCCLlJr3VH8tA0iqFAkN
xcmizDHxzYyhARbrfLj2hMki8+kjwwQLA/RJtZS+95cF741hb3FrAzwgcYoo
ucti5OidDfn2Bgio0dT2tpNFTPipea3NBuCx8ueNM5dF+e0VvyfbDHCLZ+De
eU1ZbB3MTbPcZYANDZ3keLIs9reNnnizxwD8h4967haQhXfffiWnAwZgCuM7
qLEigy3b85I7wg2w/mKnz5e/MtjhyFviHm0AJTElo0PfZfA6WzOlO8EAM7X2
f6ZaZbBhJk7DK8UA7lM3znnXyWBXT9rJnksGMH6QKldeKoOD+R8ueV41QE/e
0aKxPBnI7q7f/eWmARTV32qT0mQQLPb1j9tdA0SFL5QpxspA93Cm9odyA+im
xBOyoTIQkzqktqHKAH6b/nYu7pTBgk9v98t6A+xNr41qcJaBQfLWdaveGqBV
JZE4aimDsnTHfWXvDXC777uMuB5DHw+TtaqfDfDkYYB0Jk0GpNOnOrJ6DXC3
/CW4hGSwMbtIRmDYADsVbzL6ImlM95EkosYMIJtYKZM7Ko2OaPqr0RkDfLj3
4subr9Jo3Bet4bligKPPTn7ubpLGUuDWNY0chlhjX0/uqpQGTU5LwFjAEMtO
W+7UFEmjcDYgOVfcEN4uoklnr0iD2/TwU26yIXb69VStTZTGxExF5gFFQ1wy
uObwM0wacUpXNT5pGOK0sM3qUF9pXIhNCFxlYAgNvrcZPzZL48vNzx55ZoZQ
mtTaYW0lDcuF+QVWK0M4+4dlJutKg/OF3Xrf9YaQHyrbWEWRhoCEhvVLJ0OI
9i7FdfJJg7934bfCVkPIPD6Iz/NSaBmQQcwOQ6h0WiS+GpLC3soh4qufIdJq
Endd7ZRCVHvNL5MgQ+SJpHR4vZDCkbA5IvWwISMuU35yPZDCk5qJ1cMnDHEs
5v3V7GtS+JXH+pOIM4QAWyGz9FkpaPw5aZKebIjJ7gBSzDEpuFg26gynGeKH
fFh/m78UdMmaLeaZhnizgx7Mt0UKtR+WxM7mGcLiquIzXSspBKamMX0tNIT2
kQfdq3WksGm7RarGfUNEUP3eGstK4bigQ0P4Y0OcP/w2TZJbCjK+wtde1Bhi
RuAIfWBKEq1/PksLNhhCzIaj4UqfJAaFpk23NhuiwpZK0FskcUG8ZPZauyE+
0Q7ceV4piVVSzu4/vjDs0VQmbFwoiUdiyts0+g3RThSGX7goifgvYfNBvwyh
f1zy5+doSajIJtNLxw0RdPGjD99+Sdh73yZNzBpidUPdlIq7JOT4JVL1mIyQ
G1F1XWutJLJ9JAuDOY1w3v/RIbKeJMqjx7YVCxjheeSt4BlZSZR59hb+FDeC
t1RqViWXJI60aqTKkY3QNB2xsuefBKqSBUW3KRrBY0NsPst3CfhT32qlahhB
4VNl8qm3EmiezfreoG+EewPOzyceSYDVp0Z9gW6E996HN9jlS0ApYT+vtqUR
Aoe8Dc+clcDNwP6YHeuMoPFha+STcAlcmdt6NmUj436rO/otPhLgmmTXqnE1
Qp32/a2tjhKwWqJ5//Y0glHYm5lKOoNf9jclCV8jFA7vkkhTlMAxg7AIy0Aj
Rh8/UbNJUALWnJJ+ew8aYe72zNTSHAliFjM9qceM0P9hsf7CAAk7P1r/fBxj
hIiVdF2xFhJ6a3UjuxONUJu8c01UBQlfq4fzV1KMcJDMxdZxnYSU4zkuchlG
4LprcUz8HAknToWnWV5lyHux6i7CSWixK9jufdMIWdkbC1x3kVBFdi6JKDbC
AO/rfW4OJHQZ5J+5UmaENWUsHGuMSUgsqJsoe2qEXYs/TkjRSHA+2Pm9qc4I
XjN+nz5zk2B/gsN14LURzgRE0RImxRGdGOY832IE604TT8pXcWy1tnsv8NGI
8R7mX8ptEMeK5Y2Pcj1G8Pza3c5/Xxxtcze9DQaNsP+NAM3vijgaGoMD1/xh
6B+6L/p2rDh652nzzpNGuDGru/xxnzhuPP7ItWPeCJRzhXnjLuI4RirN2Mts
DK4k5YPTq8ShL/7m5iEuY0gF8xz/oSyOw5lm+hGCxnjEWltXJygOehjVIo5k
jOItTzcmzorBctf550lkY3xsitAy6xXDBZabL84qGqPZ5JLPxzdimB88aHle
wxhxXVnzOx6IITFexDRV3xgzYfoLHzLFIGaXfus83Rg1u7mDDE6K4VmsYMo5
GOPOxS/bI/eJITr4wshpW2PsuB7cXL5ZDAUW+s9POTLuG8x422kuhgC2Rd6o
Lf+b344BBTEcaFl5E+ZhDMG1aqlfecUQmm6/EOhjDE9q6N7nk6IoXfXn6s69
xoiuF/iX9kUU16+NlLkcMMb4Lz6TjfWiiDy5jW4TbozArfEWM0Wi6My30DaO
Mv6fd44/OU0U9NvZqYrxxlBKOVfGc0wUrYaxu4TPGuNm3FmTsJ2iWOqcvLZ4
wRjuBkP5zetEwSI+s+5HpjGeuUwtC+mKoijgvMe7PGOkLEhsgYQo/qK+q7zQ
GBO5tfe2L4vgNkta7ZUSY5TpBYj7DIqA4F7mi3hkjL0ymWmuTSJwvcVZ51Vt
jPPuv3SMy0SQrHLv8+oXxrgWOz/NnCkCtea/W8lvGfp3hI9XRIugv/2N2Xyb
MXysaWpe/iLIOGwa1fHJGOLxT26NbhABd6+xUsk3hn8opCP7DEVw37pWI+GH
Mbr2S+e1S4sgvLEx1XPEGB+qynTUmUWQcsXZVf+fMS6t/6oZ+FMYRh/twtkX
jLHb5Vp+ZrMwkm8VT3cym2CTpmDWwzJh7NMObC3gMsFP84206ivCWHU+gu2w
oAnKxVMsSqOE0TnxIdWSZIK+aN75VF9huEfuPMJHNkHBKQGfHfbCEPeSKO9Q
MMGDo39jpPSEsb9u0CZH3QSX+ER3PiMJo6G7UttHzwQ8Lr95XBaFcOBXwl4V
UxOYfJpJau8VQo6GydzwahP0X3s5ZPlKCBuGH3YVrTVBmsVfvexiITgd/suz
18EElztlQ/pThQCNd8kqm00gTWe7J3FECFEHzLf3u5tg6WvAtKkHY/0pNTzH
2wTP52RcbC2FkBS3q3eLvwk2Jyy2WSkLwc7zVzpfkAkqNs8c0+AVgvf37It1
h0xwUVSgnOW7IB5VeHUfOm6C3ccD/iXeFoRrgWigcqwJpsbUm4dDBZF4+KpV
Z6IJfsRfdVGyEMQUd69XXIoJhP1V88zZBfF6W1Wt7iUTCA6vf6P5TgDdh4R2
f8lm8C/M7Z+9JIBfx6vs4q6bIDvrB0fuDgGU37kaqlFkgv2qE+vlVQVg637x
c+t9EwSaP6qPGuOH5r+jMYcem+CFh1Xykyf8KOHU8CPVmODLy+ePm6L5QbWI
TXj0wgS5YdHeVev4IbHVfcDlrQky7HqzE4T48c4y6fh4mwka+APitD/xYQ/T
L/szn0ywK7Vcu/QaHxyrN7kofTOB87OTZYL+fIh7eeVC1SDj/rISdTttPggn
X+Ta9Idh/5c6xd5TvPAqkHgwOGGCvFuSTpureFH4cfrckTkTdB/M1pY/yQs/
LvarnEymuFTH4928nhd1DmI96RymWPOkddFFiBdCg1Mb5PlNESZ/lFzRyQNn
4tifYlFTXIsu/jyXzYPS2ZAnRtKmOCWjt0HChwfC3wrvV9FMkUT6fVZYjQcX
Jv5+sFQxRWFM98OhUW7o+IvKvdQyhfk+pZ7scm44Fny7ZGPI4D/OStM+xo0d
TjTDBjNTFG9uv5hNcCNmde7MGktTWLMKuw6xcUM1Tu17ra0pQss3RQg3cuFt
yKk/dEcG/yAnRckULmSknpB54GKKuuxvuxc3c0GlrHOf6nZT9Mv+21ojyQXr
/m3d2TtNQXbKlfb6yokboS37BANMUaIm/uJLHicqp+cko4NMIbU6P9jEjxNR
9tf6Rg+ZorntockBdU6sTz/5avtxU+T+7DZOGuXATau9DQ0xpuhzrE+IesAB
UwFSj06iKfRKDda6hHHgBtN6/oxzphi/JnGa04wDoaEvNi1eNMXRvCMHriyx
g1Ng/d0dWab4s+o4iaeOHZltl2Tq8kxRwbvnonscO3SF92fTCk3xrrKAI9GW
HTfCT2tH3jOFv1JFYjoPO+7w323tKjfFRWdr49hmNvzUS4sxqDTFtnheDcfz
bFi4MU0k15kiznk8dm4TG27HX+LpfWUK/gsz7nHibJjcqvXd8J0pjBKIptGP
rABLWG18uymMW7mnTTNZkdqifqvzsykyox5N7vJgxb0w9kuKvabQpr7sDaSw
Yq9k7emQn6a4XNHe7fqdBV1WQnFPR0wR03edWS6fBTcm70ez/DPF3hqh/W99
WLAhc2vUunlTcPFIWbgqsSBJuibyDBMdDnKfk+t+MOPKu4yIdxx0jLOnHuUv
ZMadpKxjAvx0lPpmypvtYYZ1ZuQhB1E62HNDb9iqM6OoaWpPohQdx94+lDX+
zQTv/Q/dn1PpyH5Kvc1ezIQs+wNW80p0hDKd8X8UyISGym55XU06Ev9NHV6n
xQS+zKI5H306xPePDxz5skIMO5x9mW5Kx4ddV6flPFaIilfGp16upkPBotAz
pXuZ8Dq71WTSmg5HXja3Zx7LRM+D658p9nRci/9Bfdi9RPD3vd6/zpkONt4X
U/s9lghLj/C/wW501OU4kX5/WSQ4lnZ6pXvSoTgSVau5fZHoszCqeOLD4Od0
Ssfg8wJBMsxb7tpDx9zLDzeWty4Qe3JctOaC6Vg/QfZK+ThPMHUtrSGF0XFZ
xjVzcMs8YfzXzlLvBB1WyvcuM7fPEScuDCvYxdIRnJJxud95jrBUSfjlnUhH
u199V3LLLNFT1Xrh8Dk69tnKZ887zBLp0gcpiRfpkN04QNVtnCGiqqWTLmfS
4S1+9Kam7Qxxtfvg+4JcOt7kpuwfq58mvu5Tn3tQQEfYdlLFcUwTKtRfC1XF
dJzgMH/zrmqKOLHfq+vFAzrUivd+GzadIsQu6p9vfEKHfqrzqubyf0T0FWHq
uxo6nil+UTyq+4/ocSqIa3lBh8dfvU8jdyYJTs+s2neNdNRE117RUJkkWgyy
3r1tpWOPh2axfv4EYS3ndL+hkw6NwR2bWMkTxJzdbp/abjqCbKNbcjLGCdey
mB8P++hw2TXhxyIyTvy12GRaNETH/RJ3D70zY8T3u1Fu2aN0PFe/PKnOMUbQ
y8qszvyjI3pfdm/PyijhM5Axe3SeDrfFct3liRHiUkPHEV8mM7TVlnmWD/4h
NrWSah05zKB3znGC+dNvoj+QrdmIzwyH5B6H/3zzixhasc2VFjHDyofM476V
w8TXodMmSxJm6PSQjz9RPERUxoelfiWbgZ40rqCV85NIMi8vrlQwQ+Wkcu+R
sz8InpCRhAw1Mzx4st3OM2KQ2JnxVu6AjhmUVK//+Ro4QDToz4avMzID8+HT
W+a39xMWHbJnyOZmqN0pKVpm10c4qfS7j8EMTr+ayrjovUT/r3/fn9mYYf/v
3IYF5e/E5PICNcXBDI7neB9JqfUQQT754ts3mSGNv5H5KGs3wb8q7ZniVjMs
TBKppK9dBL3rMPWPJ+N8ASV+8uFHYqR0RrfUxwx5seyswuc6iBsHnk8e3GOG
Xr4YjRDfD8TmmWg/w2AzaEvyKIpYtBE7t/UkTBwyQ2wbt+KYwjvizugp13vH
zPA5L9rE5t0bInGdQpt/tBmyzw+3qh55SfRg1zQlnrF/Ph6ZlDrCYG70xYdk
MyTFdtynJ1UQTd8Om8enmmH+3tAn3/f3iaay61uNM8wwwmq+/rheLrEjSUlm
INsM9UpeN2yP7K79f/wS8x/9R//Rf/Qf/Uf/0X/0H/1H/9H/J/pfQiXpsA==

          "]]}}}, {{}, {}}}, {{}, {{{
         Directive[
          AbsoluteThickness[1.6], 
          GrayLevel[0.5], 
          PointSize[0.006]], 
         PointBox[CompressedData["
1:eJztevc71e8fv73HWcjee54VRV6P7FFRUVGhUiSjpEEpFUWhodA0IopQIXln
RINEqQilUmSEZGXF93x+/V7f/+Db45dzPa5zX891P+77+bzPdVS3hqzZzsPF
xdXPy8X1v8//G8tK75VUb7xLtNME2MmJWUTbjBfJfHUFUab3cqghqpggxyCf
NPGMGDRMVUrKryRaDLRU11g0Egs1dy9u2P6UKB6XM2QTb4naT+70q0H1xF7L
nR+LOluIV/u+HZINaSJINW7L08PbiSVbqv8bKm4mlolMRQhSO4k7x2inx43e
E3ev+q2ccPtKcD8NlMnObiXK7w+811L+RiT69TnwyrYTe9+8WSvX950Y3rZt
hhL3kWgvWf6subCHOHftwvyHiU6iLuC1ssv+XiL8/VnJPOOvhD0t2v2ieT9R
Kbs1sW5rF6GX/GvtzYUBIujg/fV2F78RX7nYfEdqBon2RdLWWk+/E9tfyThr
RQ8TNkJv1QNGu4kru6P5XNRGiHKlvjqq8g9Cukw2YYz7N9FcrP5Xw6mXoDTa
5HF3/SZ49LROpe3tI2TC+hwiqkaJSxZ7dWOu9hNXnD6s9Lo+RjQwIzM/PBkg
fr1vTyuIGCcWdxblp/74SVTtK1YLXD9B/Nx8bL5eeIjY4mJYlsKcJNa37XUK
0h8mjktSwJD8QyT16hHRzr+I4OxlqRYDfwivqTJrIfYI4fP9+rWHT6eIbE2N
nrjaEcJCdIl21o1pIlBlf4v96t/EqB2TxHtwhrg5Gtpt9fk3ISj+3rDFdZb4
+l3o66GAUeLQnjNu8rpzxL1K94tjE6PE7m1/1rVy/SXEePMb7kSNEd0f+vgF
2/4SpgKpqzJFxomXXf4mBQXzxC6unu8dSeNE+8OKm6+iF4g4oUxXd4UJQv/9
w0t0Qy6YzmttoGRNECl/bzk8SuHC5a2yjyn6k8TarkdNf7m5wa2yx2L9vUki
YqXWmYVd3PiByJSvi/8QEfkrvla2cMM5uS+u8L8/hIFbubEFwQO+VZVNT4kp
ov6VfseBXB7MHQxWVq2dIlokzxKhZF40HnvLfGY7TdCr+Kv0I3gxlkSvufdi
mtjp1lua9Y0XL8dsjvY6zBCbHGqjO534kG1voeRXP0PsZW6Lab3PB9O3T1zp
jrOE749XtHNy/Dh1Y/65Xd0sUX3IJlHkOD/uXb9hnGs3R6zZumqFXT8/Ckvf
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
fcSCzJ3Awa7Pk0SayPvI51Us3EydcO89NEn4tE9kpD5jof1F0M2cRZPEriaJ
Bv8GFgSygsfUSiYIswKf6cXNLOy2veTrsXqCaKIbGvJ+4MS/5biU89A48UGw
dEfjJxbSzTs0pmLHidoWi1uXvrFwNNnmno/GONFhxju4sY/F6YuB7dFVY8SG
F05mKsMsdE9xPfb1HCPCye5nvo2x8O3AgwNcE6NEYua2nsxpFh7aL9HfcHaU
EOIps9uywMLHaqeJXbqjxPHipEJFfjZ2ed0cN6/9TdRbmKm0ibARVsDtULfp
N/FFoTf1HIkNHSttCfLkCMHzoUvWXpqN2ett26XPjhA3h3fenJVno1C3M6hN
e4Tw769mF6iykYT5uIKoX4SGq06zlzYbgwvSNK17w0RTYdc+cUM2isZuPpTp
GiL2XjHSKGewkVDreP8EaYjQz3X95GvGxqj5/eUBxCDBfzDuhrglG4Rh/M2G
oJ/EeJHcrmJrNtqczkjlXh0gSnjsrDwc2Vgk4t+yUNdPVGqt1JhbxYbssS8q
7yb6COmuPeTrbpz8bB+w1dT6CCvuSWELTzYynW6vHlrZS8hvk5do92ajofrM
fVb4D6Lwl7pS2HY2nozqJE/d7CHkb6xeKr6LDX+NtUuXNHUTG8N+bM3azUbj
7q+fJv98J3RjNVKX7GfDMPfOf3TV78TzhZUdrw6x8cXwLG3A8RvxipKt63WM
U7/WYE2V0C7ir0jgyaGTbEzWGhq8v/yVELXtGYmIZ0MyYUej2PEvxBb62p0C
F9gYCXqnGfy6k/jhNvXrbAobB/MOd76S/0Q8cZSJkbnOhoir1W5dvw5CrnpU
53omx/4dYc/oe21E+5HGjyq5bIwJVEh/nmklvH0HrmfeZeNEoLOaqXULAb/4
ELUHbGi65U6dPf2O+JM86Zpexkagb4NU/5tmIkMh0Eqhkg0j/aIJK+k3RK65
iU1yLRu1BXk6FiWviANrTq6TqGejoCfy44R5PaHx8V54dBMbz0y/zT6ofkYo
Bk7enXrHRn1k/7ED1jVEU1nKWEA7G7zE2objsRWE84V2p4+f2RgWi7DUPFlK
/O5deODYzQbZSuhq0UIBIVi3yri0nw1V4YBm85/pxBYfkQqVXxx/ht78UQf2
E/+Pvxz+wz/8wz/8wz/8wz/8wz/8wz/8wz/8wz/8wz/8wz/8w/8H+D9My2MB

          "]]}}}, {{}, {}}}, {{}, {{{
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          PointSize[0.006]], 
         PointBox[CompressedData["
1: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
V35H+NgaLp/iXFQYw6+PNf7xzf5cXkUxe3G4rD4K0lt+bePyBoKiH7ep6sMx
+oiv7f/4ZtHrLsb6CD3bwJD5n7zAi/iFFvq46Vvl+ZhrL14/+DjNXh8JtUcH
13H5oCLhezNu+vArX/Ctletvutg93rfb9NFX1buezeV/Xz8UWRSmD6cnScsO
cu8b8SecfPSwPmZX2hbd4eLx7eCVfrdT+thzVPJWDRc/t66ZT5oZ+ggL7DGp
ek3H4wfHJYdv6+NDY65jFhfv5N8IKi7Tx8WtgSJB3Hg4H5Gb3V2vD1UpkQAq
N16iycN1zHZ9aDwMCi9uoWMq7mHdj4/6GL4YyWFw4y025j2XNaKPu7qS+Snc
fPCqqty9boaLhwt/f+9zOlrE8nX4xQywMorRL8vNp1POguQCZQN8z/ctMeDm
W5L7RUdXbQPUntm53oCbjzJO7Cf/WAaIu6j0RoabrwYPMw9dhAF65VTNP1TT
sTwl8zDHiSu/xD7mHDff061+P3/pZYDNW1c/NObWQ8nZdZu3BBig/cvoj7vc
evn57QDxO8KAO9O9JZO59fSHQtkRHWeAgdtVDgHcejM+3fNd5JwB1GVXHbvK
rUeXRcFlp64Y4KutyZsqbr2+zN7RKZNvgDWnRSzruPVsO3XY4XSFAXY+PVRd
yK13ZSFrRbGnBtiQyAiM4/aDB0vsFsR0GCCUVUEQ1+iwf6FTONZnAF3+UttP
3H4ylRgct+2nAX6blB0LvMTt90rZJa2z3Pv8Wivaze1Hpa1rrReJG2J9DrWV
lUJHcd+sSSbJEOqvL30OPUPHVVu1g/PahpB03rzy4kmuvlccw41sQwxgROzG
MTpkWUVWZTDEIetmw0tx3PyYESqVdDLEkZAj9/Ye5vaHwuvnvL0MYR1+4pbF
QToOVv3svOtvCItCP9lve+nIOLX26HS4Ic6YJY/t203H0FHjK8tiuf78SHAf
C+G+d7I9msfOGKIxvXKZWyAda3MeKD67bIjF/LmPrvjS0dBIihC6YwiF4epn
rd50TCs7rcADrn3LPaHfvehoX3MjIaLeEMoCnIrvbnR0eARZ3G4zhGVqSO4r
7h6YueizT1evIRIyzthlOdLhxHCZ5x82xJCq4CV3WzrG7/2UNZoyRFW22a2/
S+ng2Td/yUXYCGnmxyMOWdKRHXkvM1TBCKqHAySGF3Dx/0tQT6sbIblt4a5l
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
R//Rf/Qf/Uf/0X/0H/1H/9F/9P8g/R8zA77h
          "]]}}}, {{}, {}}}}, {
    PlotRange -> All, AxesOrigin -> {0, 0}, AxesLabel -> {
       FormBox["\"x[t] (km)\"", TraditionalForm], 
       FormBox["\"y[t](km)\"", TraditionalForm]}, DisplayFunction -> Identity,
      DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 25.175796048208777`}, {0, 5.545114602930728}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"\[Theta]=35\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    PointSize[0.5]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    PointSize[0.5]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"PointSize", "[", "0.006`", "]"}]}], "]"}], "}"}],
                ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"\[Theta]=45\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    PointSize[0.5]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    PointSize[0.5]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"PointSize", "[", "0.006`", "]"}]}], "]"}], "}"}],
                ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"\[Theta]=35 - Without\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5], 
                    PointSize[0.5]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5], 
                    PointSize[0.5]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"PointSize", "[", "0.006`", "]"}]}], "]"}], "}"}],
                ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"\[Theta]=45 - Without\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    PointSize[0.5]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    PointSize[0.5]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"PointSize", "[", "0.006`", "]"}]}], "]"}], "}"}],
                ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8450974638110275`*^9, 3.8450976892253847`*^9, {3.845097822548794*^9, 
   3.8450978272133217`*^9}, 3.845097983752653*^9, 3.8450980475280523`*^9, 
   3.845293658904823*^9, 3.851844839431878*^9, 3.851844952344263*^9},
 CellLabel->"Out[57]=",ExpressionUUID->"852bb467-2762-4a70-912b-5ee36d6e947c"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Maximum Range with density correction", "Subsection",
 CellChangeTimes->{{3.8452934945738525`*^9, 3.845293497961792*^9}, {
  3.845294086629487*^9, 3.845294097485487*^9}, {3.851844643057418*^9, 
  3.8518446439360085`*^9}, {3.8518448667882195`*^9, 3.8518448679172*^9}, {
  3.8518449879091797`*^9, 
  3.8518449979194202`*^9}},ExpressionUUID->"0a361061-e31b-45f8-8c24-\
8748c42e3c39"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Theta]L", "=", 
   RowBox[{
    FractionBox["Pi", "180"], "*", 
    RowBox[{"Range", "[", 
     RowBox[{"20", ",", "60", ",", "1"}], "]"}]}]}], ";", " ", 
  RowBox[{"(*", 
   RowBox[{
   "We", " ", "start", " ", "with", " ", "several", " ", "thetas", " ", "and",
     " ", "look", " ", "for", " ", "the", " ", "one", " ", "that", " ", 
    "gives", " ", "maximum", " ", 
    RowBox[{"range", "."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"tL", "=", 
   RowBox[{"Range", "[", 
    RowBox[{"ts", ",", "tf", ",", "dt"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Vtxall4", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"i", "==", "1"}], ",", 
         RowBox[{"v0", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"\[Theta]L", "[", 
            RowBox[{"[", "j", "]"}], "]"}], "]"}]}], ",", "0"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", "tL", "]"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", 
       RowBox[{"Length", "[", "\[Theta]L", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Vtyall4", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"i", "==", "1"}], ",", 
         RowBox[{"v0", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Theta]L", "[", 
            RowBox[{"[", "j", "]"}], "]"}], "]"}]}], ",", "0"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", "tL", "]"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", 
       RowBox[{"Length", "[", "\[Theta]L", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xtall4", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", "tL", "]"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", 
       RowBox[{"Length", "[", "\[Theta]L", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ytall4", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "tL", "]"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", 
        RowBox[{"Length", "[", "\[Theta]L", "]"}]}], "}"}]}], "]"}]}], ";"}], 
  "\n", 
  RowBox[{"(*", "Calculations", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"j", "=", "1"}], ",", 
     RowBox[{"j", "<=", " ", 
      RowBox[{"Length", "[", "\[Theta]L", "]"}]}], ",", 
     RowBox[{"j", "++"}], ",", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "<", 
        RowBox[{"Length", "[", "tL", "]"}]}], ",", 
       RowBox[{"i", "++"}], ",", 
       RowBox[{
        RowBox[{"vi", "=", 
         SqrtBox[
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Vtxall4", "[", 
               RowBox[{"[", "j", "]"}], "]"}], "[", 
              RowBox[{"[", "i", "]"}], "]"}], ")"}], "2"], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Vtyall4", "[", 
               RowBox[{"[", "j", "]"}], "]"}], "[", 
              RowBox[{"[", "i", "]"}], "]"}], ")"}], "2"]}]]}], ";", 
        RowBox[{
         RowBox[{
          RowBox[{"Vtxall4", "[", 
           RowBox[{"[", "j", "]"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"i", "+", "1"}], "]"}], "]"}], "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Vtxall4", "[", 
            RowBox[{"[", "j", "]"}], "]"}], "[", 
           RowBox[{"[", "i", "]"}], "]"}], "-", 
          RowBox[{
           RowBox[{"(", 
            SuperscriptBox["E", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{
                RowBox[{"ytall4", "[", 
                 RowBox[{"[", "j", "]"}], "]"}], "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], "/", "y0"}]], ")"}], 
           "BoverM", "*", "vi", "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Vtxall4", "[", 
              RowBox[{"[", "j", "]"}], "]"}], "[", 
             RowBox[{"[", "i", "]"}], "]"}], ")"}], "*", "dt"}]}]}], ";", 
        RowBox[{
         RowBox[{
          RowBox[{"Vtyall4", "[", 
           RowBox[{"[", "j", "]"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"i", "+", "1"}], "]"}], "]"}], "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Vtyall4", "[", 
            RowBox[{"[", "j", "]"}], "]"}], "[", 
           RowBox[{"[", "i", "]"}], "]"}], "-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"g", " ", "dt"}], "+", 
            RowBox[{
             RowBox[{"(", 
              SuperscriptBox["E", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{
                  RowBox[{"ytall4", "[", 
                   RowBox[{"[", "j", "]"}], "]"}], "[", 
                  RowBox[{"[", "i", "]"}], "]"}]}], "/", "y0"}]], ")"}], 
             "BoverM", "*", "vi", "*", 
             RowBox[{
              RowBox[{"Vtyall4", "[", 
               RowBox[{"[", "j", "]"}], "]"}], "[", 
              RowBox[{"[", "i", "]"}], "]"}], "*", "dt"}]}], ")"}]}]}], ";", 
        RowBox[{
         RowBox[{
          RowBox[{"xtall4", "[", 
           RowBox[{"[", "j", "]"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"i", "+", "1"}], "]"}], "]"}], "=", 
         RowBox[{
          RowBox[{
           RowBox[{"xtall4", "[", 
            RowBox[{"[", "j", "]"}], "]"}], "[", 
           RowBox[{"[", "i", "]"}], "]"}], "+", 
          RowBox[{
           RowBox[{
            RowBox[{"Vtxall4", "[", 
             RowBox[{"[", "j", "]"}], "]"}], "[", 
            RowBox[{"[", "i", "]"}], "]"}], "dt"}]}]}], ";", 
        RowBox[{
         RowBox[{
          RowBox[{"ytall4", "[", 
           RowBox[{"[", "j", "]"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"i", "+", "1"}], "]"}], "]"}], "=", 
         RowBox[{
          RowBox[{
           RowBox[{"ytall4", "[", 
            RowBox[{"[", "j", "]"}], "]"}], "[", 
           RowBox[{"[", "i", "]"}], "]"}], "+", 
          RowBox[{
           RowBox[{
            RowBox[{"Vtyall4", "[", 
             RowBox[{"[", "j", "]"}], "]"}], "[", 
            RowBox[{"[", "i", "]"}], "]"}], "dt"}]}]}]}]}], "]"}]}], "]"}], 
   ";"}], "\n", 
  RowBox[{"(*", 
   RowBox[{"Getting", " ", "range", " ", "for", " ", "each", " ", "angle"}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"xand\[Theta]", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "\[Theta]L", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"j", "=", "1"}], ",", 
     RowBox[{"j", "<=", " ", 
      RowBox[{"Length", "[", "\[Theta]L", "]"}]}], ",", 
     RowBox[{"j", "++"}], ",", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "<", 
        RowBox[{"Length", "[", "tL", "]"}]}], ",", 
       RowBox[{"i", "++"}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"ytall4", "[", 
             RowBox[{"[", "j", "]"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"i", "+", "1"}], "]"}], "]"}], "<=", "0"}], "&&", 
          RowBox[{
           RowBox[{"xand\[Theta]", "[", 
            RowBox[{"[", "j", "]"}], "]"}], "==", "0"}]}], ",", 
         RowBox[{
          RowBox[{"xand\[Theta]", "[", 
           RowBox[{"[", "j", "]"}], "]"}], "=", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Interpolation", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"ytall4", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "[", 
                   RowBox[{"[", "i", "]"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xtall4", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "[", 
                   RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"ytall4", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "[", 
                   RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xtall4", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "[", 
                   RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}]}], "}"}]}], "}"}], 
              ",", "0"}], "]"}], ",", 
            RowBox[{"\[Theta]L", "[", 
             RowBox[{"[", "j", "]"}], "]"}]}], "}"}]}]}], "]"}]}], "]"}]}], 
    "]"}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Xrange", ",", "\[Theta]"}], "}"}], " ", "-", " ", 
    RowBox[{
    "Reversed", " ", "pairs", " ", "to", " ", "use", " ", "interpolate", " ", 
     "as", " ", "suggested", " ", "in", " ", "the", " ", "text"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xand\[Theta]", " ", ";", 
   RowBox[{"(*", 
    RowBox[{"Several", " ", "ranges", " ", "for", " ", "all", " ", "angles"}],
     "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{"\"\<Maximum Range in meters= \>\"", ",", 
     RowBox[{"Max", "[", "xand\[Theta]", "]"}]}], "]"}]}], " ", 
  RowBox[{"(*", 
   RowBox[{"Largest", " ", "Range"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<Maximum Range initial angle in degress= \>\"", ",", 
    RowBox[{
     FractionBox[
      RowBox[{"N", "@", "180."}], "Pi"], 
     RowBox[{"xand\[Theta]", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{
         RowBox[{"Position", "[", 
          RowBox[{"xand\[Theta]", ",", 
           RowBox[{"Max", "[", "xand\[Theta]", "]"}]}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{"-", "1"}]}], "]"}], "]"}]}]}], " ", "]"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "The", " ", "angle", " ", "at", " ", "which", " ", "it", " ", "occurs"}], 
    " ", 
    StyleBox["\[PlusMinus]",
     FontSize->18], 
    RowBox[{
     StyleBox["1",
      FontSize->18], 
     StyleBox[" ",
      FontSize->18], 
     StyleBox["Degree",
      FontSize->12]}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.8452934590870275`*^9, 3.845293461594324*^9}, {
   3.8452936791935935`*^9, 3.845293680875098*^9}, {3.8452937779863405`*^9, 
   3.845293792135525*^9}, {3.8452938878026757`*^9, 3.845293891767067*^9}, {
   3.84529396093108*^9, 3.8452939895744815`*^9}, {3.845294037263998*^9, 
   3.845294049545164*^9}, {3.845294173484235*^9, 3.84529417520862*^9}, {
   3.84530169102824*^9, 3.845301748307951*^9}, 3.850985569294408*^9, {
   3.8518446345670185`*^9, 3.851844634950992*^9}, {3.851844860317554*^9, 
   3.8518448812345953`*^9}, {3.8518449584539294`*^9, 
   3.8518449759990225`*^9}, {3.851845013454916*^9, 3.8518450421352105`*^9}, {
   3.851845078922371*^9, 3.8518450792694397`*^9}, {3.8518451593862514`*^9, 
   3.8518452469511614`*^9}},
 CellLabel->
  "In[113]:=",ExpressionUUID->"f61c5a19-3acf-496b-91bd-da7529226650"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Maximum Range in meters= \"\>", "\[InvisibleSpace]", 
   "26621.841081175964`"}],
  SequenceForm["Maximum Range in meters= ", 26621.841081175964`],
  Editable->False]], "Print",
 CellChangeTimes->{{3.851845220359288*^9, 3.8518452492330604`*^9}},
 CellLabel->
  "During evaluation of \
In[113]:=",ExpressionUUID->"126ef8be-a693-4676-8076-62679d51da28"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Maximum Range initial angle in degress= \"\>", 
   "\[InvisibleSpace]", "45.99999999999999`"}],
  SequenceForm["Maximum Range initial angle in degress= ", 45.99999999999999],
  Editable->False]], "Print",
 CellChangeTimes->{{3.851845220359288*^9, 3.851845249239045*^9}},
 CellLabel->
  "During evaluation of \
In[113]:=",ExpressionUUID->"23a8c234-a10c-4724-9a95-6181d494fcb4"]
}, Open  ]]
}, Open  ]]
}, Closed]]
}, Open  ]]
},
WindowSize->{1141.2, 579.6},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"12.3 for Microsoft Windows (64-bit) (July 9, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"0200aa0b-3f4f-4807-a90d-a595af0c3b9e"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 328, 6, 67, "Section",ExpressionUUID->"88dc55d9-d2d5-49ea-a9cc-5040bf43d2be"],
Cell[CellGroupData[{
Cell[933, 32, 171, 3, 54, "Subsection",ExpressionUUID->"b9c7f11c-1ea9-4739-9bdb-b615408fa3e9"],
Cell[CellGroupData[{
Cell[1129, 39, 12565, 338, 513, "Input",ExpressionUUID->"4a00a4e6-010a-4e90-b4dc-5f83f1282380"],
Cell[13697, 379, 45129, 808, 235, "Output",ExpressionUUID->"d67a0d48-b082-479a-830f-3bc8ddb3654c"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[58875, 1193, 168, 3, 38, "Subsection",ExpressionUUID->"c1e6e4ae-4bd5-41b8-9020-4f9bc54f3377"],
Cell[CellGroupData[{
Cell[59068, 1200, 9745, 269, 371, "Input",ExpressionUUID->"011434d0-cfee-43d3-b9fc-f3da0ce6488f"],
Cell[68816, 1471, 43469, 781, 236, "Output",ExpressionUUID->"67a3f503-30e6-4189-9cca-f6155ed7edf1"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[112334, 2258, 200, 3, 38, "Subsection",ExpressionUUID->"8e4f8cf8-aee1-41cd-8c8d-50c16c017357"],
Cell[CellGroupData[{
Cell[112559, 2265, 632, 14, 28, "Input",ExpressionUUID->"f7a1f34c-c97f-473e-9512-e81dfb9bec21"],
Cell[113194, 2281, 85592, 1524, 236, "Output",ExpressionUUID->"852bb467-2762-4a70-912b-5ee36d6e947c"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[198835, 3811, 386, 6, 38, "Subsection",ExpressionUUID->"0a361061-e31b-45f8-8c24-8748c42e3c39"],
Cell[CellGroupData[{
Cell[199246, 3821, 11900, 334, 493, "Input",ExpressionUUID->"f61c5a19-3acf-496b-91bd-da7529226650"],
Cell[CellGroupData[{
Cell[211171, 4159, 400, 9, 22, "Print",ExpressionUUID->"126ef8be-a693-4676-8076-62679d51da28"],
Cell[211574, 4170, 425, 9, 22, "Print",ExpressionUUID->"23a8c234-a10c-4724-9a95-6181d494fcb4"]
}, Open  ]]
}, Open  ]]
}, Closed]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)

